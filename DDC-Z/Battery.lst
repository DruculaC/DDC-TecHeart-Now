C51 COMPILER V9.54   BATTERY                                                               07/07/2017 21:16:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\EDA\Keil_v5\C51\BIN\C51.EXE ..\Library\Battery.c COMPACT ROM(COMPACT) OPTIMI
                    -ZE(8,SPEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Battery.lst) TABS(2) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2            Battery.c (v1.00)
   3            C3ÔºåÂú£ÂÆùÈæô48V60VÈÄöÁî®Á®ãÂ∫è„ÄÇ
   4          ---------------------------------------------------*/
   5          
   6          #include "main.h"
   7          #include "port.h"
   8          
   9          #include "Battery.h"
  10          #include "voice.h"
  11          #include "Delay.h"
  12          #include "AD.h"
  13          #define Max_battery 0x211
  14          
  15          extern tWord ADC_check_result;    
  16          extern tWord load_battery_result;
  17          extern bit Battery_flag;
  18          
  19          tByte Check2_stage = 0;
  20          tByte Battery_level = 0;
  21          
  22          /*----------------------------------------------------
  23            Check_motor_accumulator() - 48V µÁ∆Ω
  24            Check P20's voltage.
  25          -----------------------------------------------------*/
  26          void Check_motor_accumulator(void)
  27            {
  28   1        // detect the battery voltage
  29   1        ADC_check_result = GetADCResult(6);
  30   1        }
  31          /*-----------------------------------------
  32            Broadcast_battery()
  33            
  34            ??®®?¶Ã?®¢??¶Ã®∫°¿°Í?®®?1?D?¶Ã?¶Ã?®¢??¶ÃD?®Æ®≤?-?®®¶Ã??¶Ã°Í??®∞??D?¶Ã?®¢??¶Ã°‰®Æ®Æ®≤°¡?°‰®Æ¶Ã?®¢??¶Ã°Í??®
             -∞??®®???®®£§2£§°¿°ß?°Í°§??®∞®∫®Æ?a??¶Ã?
  35            2?2£§°¿°ß?°Í
  36          ------------------------------------------*/
  37          void Broadcast_battery(void)
  38            {
  39   1        
  40   1        if(Battery_flag == 0)
  41   1        {
  42   2          if((ADC_check_result < load_battery_result)||(ADC_check_result > 0x211))
  43   2            {
  44   3            load_battery_result = ADC_check_result;
  45   3            }   
  46   2        }
  47   1        else
  48   1        {
  49   2          if((ADC_check_result < load_battery_result)||(ADC_check_result > 0x293))
  50   2            {
  51   3            load_battery_result = ADC_check_result;
  52   3            }     
  53   2        }
C51 COMPILER V9.54   BATTERY                                                               07/07/2017 21:16:15 PAGE 2   

  54   1        
  55   1        verifybattery(load_battery_result);     
  56   1        }
  57          
  58          /*----------------------------------------------------
  59            verifybattery()
  60            voice alarm for battery status with power module
  61          -----------------------------------------------------*/
  62          void verifybattery(tWord Check2)
  63            { 
  64   1        // µÁ¡øªπƒ‹–– ª
  65   1        //  voice_EN = 1;
  66   1        //  SC_Speech(8);
  67   1        //  Delay(70);
  68   1        
  69   1        if(Battery_flag == 0)   // Ë°®Êòé‰∏∫48VÁîµÁì∂
  70   1        {
  71   2          
  72   2          if(Check2 < 0x1dd)
  73   2          {
  74   3            voice_EN = 1;
  75   3            SC_Speech(39);      // ÁîµÈáè‰∏çË∂≥
  76   3            Delay(30);  
  77   3          }
  78   2          else
  79   2          {
  80   3            voice_EN = 1;
  81   3            SC_Speech(8);   
  82   3            Delay(70);    
  83   3            
  84   3            if((Check2 >= 0x1dd)&&(Check2 < 0x1e5))
  85   3              {
  86   4              SC_Speech(21);      // 10
  87   4              Delay(30);
  88   4              SC_Speech(13);      // 2
  89   4              Delay(30);
  90   4              }
  91   3            else if((Check2 >= 0x1e5)&&(Check2 < 0x1ee))
  92   3              {
  93   4              SC_Speech(13);      // 2
  94   4              Delay(30);
  95   4              SC_Speech(21);      // 10
  96   4              Delay(30);
  97   4              }
  98   3            else if((Check2 >= 0x1ee)&&(Check2 < 0x1f7))
  99   3              {
 100   4              SC_Speech(13);      // 2
 101   4              Delay(30);
 102   4              SC_Speech(21);      // 10
 103   4              Delay(30);
 104   4              SC_Speech(19);      // 8
 105   4              Delay(30);
 106   4              }
 107   3            else if((Check2 >= 0x1f7)&&(Check2 < 0x202))
 108   3              {
 109   4              SC_Speech(14);      // 3
 110   4              Delay(30);
 111   4              SC_Speech(21);      // 10
 112   4              Delay(30);
 113   4              SC_Speech(17);      // 6
 114   4              Delay(30);
 115   4              }
C51 COMPILER V9.54   BATTERY                                                               07/07/2017 21:16:15 PAGE 3   

 116   3            else if((Check2 >= 0x202)&&(Check2 < 0x20d))
 117   3              {
 118   4              SC_Speech(15);      // 4
 119   4              Delay(30);
 120   4              SC_Speech(21);      // 10
 121   4              Delay(30);
 122   4              SC_Speech(15);      // 4
 123   4              Delay(30);
 124   4              }
 125   3            else if((Check2 >= 0x20d)&&(Check2 < 0x215))
 126   3              {
 127   4              SC_Speech(16);      // 5
 128   4              Delay(30);
 129   4              SC_Speech(21);      // 10
 130   4              Delay(30);
 131   4              SC_Speech(13);      // 2
 132   4              Delay(30);
 133   4              }
 134   3            else if((Check2 >= 0x215)&&(Check2 < 0x22f))
 135   3              {
 136   4              SC_Speech(17);      // 6
 137   4              Delay(30);
 138   4              SC_Speech(21);      // 10
 139   4              Delay(30);
 140   4              }
 141   3            
 142   3            SC_Speech(11);    
 143   3            Delay(60);  
 144   3            voice_EN = 0;
 145   3            SC_RST = 1;
 146   3            Delay_50ms();
 147   3            SC_RST = 0;
 148   3            Delay_50ms();
 149   3            }   
 150   2          }
 151   1          else    // 60V ÁîµÁì∂
 152   1          {
 153   2            
 154   2            if(Check2 < 0x24a)
 155   2            {
 156   3              voice_EN = 1;
 157   3              SC_Speech(39);      // ÁîµÈáè‰∏çË∂≥
 158   3              Delay(30);  
 159   3            }
 160   2            else
 161   2            {
 162   3            
 163   3              voice_EN = 1;
 164   3              SC_Speech(8);   
 165   3              Delay(70);    
 166   3                      
 167   3              if((Check2 >= 0x24a)&&(Check2 < 0x252))
 168   3                {
 169   4                SC_Speech(21);      // 10
 170   4                Delay(30);
 171   4                }
 172   3              else if((Check2 >= 0x252)&&(Check2 < 0x259))
 173   3                {
 174   4                SC_Speech(21);      // 10
 175   4                Delay(30);
 176   4                SC_Speech(15);      // 4
 177   4                Delay(30);
C51 COMPILER V9.54   BATTERY                                                               07/07/2017 21:16:15 PAGE 4   

 178   4                }
 179   3              else if((Check2 >= 0x259)&&(Check2 < 0x25d))
 180   3                {
 181   4                SC_Speech(13);      // 2
 182   4                Delay(30);
 183   4                SC_Speech(21);      // 10
 184   4                Delay(30);
 185   4                }
 186   3              else if((Check2 >= 0x25d)&&(Check2 < 0x25f))
 187   3                {
 188   4                SC_Speech(13);      // 2
 189   4                Delay(30);
 190   4                SC_Speech(21);      // 10
 191   4                Delay(30);
 192   4                SC_Speech(17);      // 6
 193   4                Delay(30);
 194   4                }
 195   3              else if((Check2 >= 0x25f)&&(Check2 < 0x268))
 196   3                {
 197   4                SC_Speech(14);      // 3
 198   4                Delay(30);
 199   4                SC_Speech(21);      // 10
 200   4                Delay(30);
 201   4                SC_Speech(13);      // 2
 202   4                Delay(30);
 203   4                }
 204   3              else if((Check2 >= 0x268)&&(Check2 < 0x273))
 205   3                {
 206   4                SC_Speech(15);      // 4
 207   4                Delay(30);
 208   4                SC_Speech(21);      // 10
 209   4                Delay(30);
 210   4                SC_Speech(15);      // 4
 211   4                Delay(30);
 212   4                }
 213   3              else if((Check2 >= 0x273)&&(Check2 < 0x27e))
 214   3                {
 215   4                SC_Speech(16);      // 5
 216   4                Delay(30);
 217   4                SC_Speech(21);      // 10
 218   4                Delay(30);
 219   4                SC_Speech(17);      // 6
 220   4                Delay(30);
 221   4                }
 222   3              else if((Check2 >= 0x27e)&&(Check2 < 0x282))
 223   3                {
 224   4                SC_Speech(17);      // 6
 225   4                Delay(30);
 226   4                SC_Speech(21);      // 10
 227   4                Delay(30);
 228   4                SC_Speech(19);      // 8
 229   4                Delay(30);
 230   4                }
 231   3              else if((Check2 >= 0x282)&&(Check2 < 0x287))
 232   3                {
 233   4                SC_Speech(18);      // 7
 234   4                Delay(30);
 235   4                SC_Speech(21);      // 10
 236   4                Delay(30);
 237   4                SC_Speech(15);      // 4
 238   4                Delay(30);
 239   4              }
C51 COMPILER V9.54   BATTERY                                                               07/07/2017 21:16:15 PAGE 5   

 240   3              else if(Check2 >= 0x287)
 241   3              {
 242   4                SC_Speech(19);      // 8
 243   4                Delay(30);
 244   4                SC_Speech(21);      // 10
 245   4                Delay(30);
 246   4              }         
 247   3              SC_Speech(11);    
 248   3              Delay(60);  
 249   3              voice_EN = 0;
 250   3              SC_RST = 1;
 251   3              Delay_50ms();
 252   3              SC_RST = 0;
 253   3              Delay_50ms();
 254   3            }   
 255   2          }
 256   1        }
 257            
 258          /*---------------------------------------------------
 259            end of file
 260          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    852    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
