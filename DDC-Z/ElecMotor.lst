C51 COMPILER V9.54   ELECMOTOR                                                             11/15/2016 14:57:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ELECMOTOR
OBJECT MODULE PLACED IN .\ElecMotor.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\ElecMotor.c COMPACT ROM(COMPACT) OPTIMIZE
                    -(8,SPEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\ElecMotor.lst) TABS(3) OBJECT(.\ElecMotor.obj)

line level    source

   1          /*---------------------------------------------------
   2             ElecMotor.c (v1.00)
   3             
   4             All programs related to Electric Motor in Main board
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "ElecMotor.h"
  11          #include "Delay.h"
  12          #include "communication.h"
  13          
  14          /*------- Public variable declarations -----------------*/
  15          extern tByte myTxRxData[7];
  16          
  17          bit CW_flag = 0;
  18          tByte Elecmotor_duration_G;
  19          
  20          /*-------------------------------------------------------
  21             InitElecmotor()
  22          void InitElecmotor(void)
  23             {
  24             #ifdef Guxingzha
  25             ElecMotor_ACW();
  26             #endif
  27             
  28             #ifdef Suidongzha
  29          // ElecMotor_CW();
  30             #endif
  31             }
  32          --------------------------------------------------------*/
  33             
  34          /*-------------------------------------------------------
  35             ElecMotor_CW()
  36             Electric Motor rotates clockwise.
  37          void ElecMotor_CW(void)
  38             {
  39             // 将P0.2, PIN25设置为准双向模式
  40             P0M1 &= 0xfb;
  41             P0M2 &= 0xfb;
  42             wheeled_rotate = 0;
  43             
  44             ElecMotor_code();
  45          
  46             MagentControl_1 = 1;
  47             MagentControl_2 = 0;
  48             ElecMotor_Delay_CW();
  49             MagentControl_1 = 1;
  50             MagentControl_2 = 1;
  51             
  52             wheeled_rotate = 1;
  53             // 将P0.2, PIN25设置为准双向模式
  54             P0M1 |= 0x04;
C51 COMPILER V9.54   ELECMOTOR                                                             11/15/2016 14:57:56 PAGE 2   

  55             P0M2 &= 0xfb;
  56          
  57          // Externalmotor = 0;
  58             }
  59          --------------------------------------------------------*/
  60          
  61          /*-------------------------------------------------------
  62             ElecMotor_ACW()
  63             Electric Motor rotates anticlockwise.
  64          void ElecMotor_ACW(void)
  65             {
  66             Externalmotor = 1;
  67             Lock_EN = 1;
  68          // Generator_lock = 0;
  69             
  70             MagentControl_1 = 0;
  71             MagentControl_2 = 1;
  72             ElecMotor_Delay_ACW();
  73             MagentControl_1 = 1;
  74             MagentControl_2 = 1;
  75             }
  76          --------------------------------------------------------*/
  77          
  78          /*--------------------------------------------------
  79             ElecMotor_code()
  80             send the code to Electric Motor.
  81          ---------------------------------------------------*/
  82          void ElecMotor_code(void)  
  83             {  
  84   1         tByte i,n;
  85   1         myTxRxData[0]=CmdHead;
  86   1         myTxRxData[1]=MyAddress;
  87   1         myTxRxData[2]=ComMode_1;
  88   1         
  89   1         for(i=0;i<3;i++)
  90   1            {
  91   2            for(n=0;n<8;n++)
  92   2               {
  93   3               if((myTxRxData[i]&0x80) == 0x80)
  94   3                  {
  95   4                  //MagentControl_2 = 0;
  96   4                  TXD = 0;
  97   4                  Delay_12ms();
  98   4                  }
  99   3               else
 100   3                  {
 101   4                  //MagentControl_2 = 0;
 102   4                  TXD = 0;
 103   4                  Delay_5ms();
 104   4                  }
 105   3               //MagentControl_2 = 1;  
 106   3               TXD = 1; 
 107   3               myTxRxData[i] <<= 1;
 108   3               Delay_5ms();
 109   3               }
 110   2            }
 111   1         }
 112          
 113          /*--------------------------------------------------
 114             ElecMotor_closecode()
 115             send the code to Electric Motor.
 116          ---------------------------------------------------*/
C51 COMPILER V9.54   ELECMOTOR                                                             11/15/2016 14:57:56 PAGE 3   

 117          void ElecMotor_closecode(void)   
 118             {  
 119   1         tByte i,n;
 120   1         myTxRxData[0]=CmdHead;
 121   1         myTxRxData[1]=MyAddress;
 122   1         myTxRxData[2]=ComMode_2;
 123   1         
 124   1         for(i=0;i<3;i++)
 125   1            {
 126   2            for(n=0;n<8;n++)
 127   2               {
 128   3               if((myTxRxData[i]&0x80) == 0x80)
 129   3                  {
 130   4                  TXD = 0;
 131   4                  Delay_12ms();
 132   4                  }
 133   3               else
 134   3                  {
 135   4                  TXD = 0;
 136   4                  Delay_5ms();
 137   4                  }
 138   3               TXD = 1; 
 139   3               myTxRxData[i] <<= 1;
 140   3               Delay_5ms();
 141   3               }
 142   2            }
 143   1         }
 144          /*--------------------------------------------------
 145             ElecMotor_stopcode()
 146             send the code to Electric Motor.
 147          ---------------------------------------------------*/
 148          void ElecMotor_stopcode(void) 
 149             {  
 150   1         tByte i,n;
 151   1         myTxRxData[0]=CmdHead;
 152   1         myTxRxData[1]=MyAddress;
 153   1         myTxRxData[2]=ComMode_3;
 154   1         
 155   1         for(i=0;i<3;i++)
 156   1            {
 157   2            for(n=0;n<8;n++)
 158   2               {
 159   3               if((myTxRxData[i]&0x80) == 0x80)
 160   3                  {
 161   4                  TXD = 0;
 162   4                  Delay_12ms();
 163   4                  }
 164   3               else
 165   3                  {
 166   4                  TXD = 0;
 167   4                  Delay_5ms();
 168   4                  }
 169   3               TXD = 1; 
 170   3               myTxRxData[i] <<= 1;
 171   3               Delay_5ms();
 172   3               }
 173   2            }
 174   1         }
 175          
 176          /*----------------------------------------------------
 177             ElecMotor_Delay_CW()
 178             Delay program for Electric Motor.
C51 COMPILER V9.54   ELECMOTOR                                                             11/15/2016 14:57:56 PAGE 4   

 179          -----------------------------------------------------*/
 180          void ElecMotor_Delay_CW(void)
 181             {
 182   1         Delay_500ms();
 183   1         Delay_500ms();
 184   1         Delay_500ms();
 185   1         Delay_500ms();
 186   1         Delay_500ms();
 187   1         Delay_500ms();
 188   1         Delay_500ms();
 189   1      
 190   1      
 191   1         #ifdef Z3
                 Delay_500ms();
                 Delay_500ms();
                 Delay_500ms();
                 Delay_500ms();
                 Delay_500ms();
                 #endif
 198   1         
 199   1         }
 200          /*----------------------------------------------------
 201             ElecMotor_Delay_ACW()
 202             Delay program for Electric Motor.
 203          -----------------------------------------------------*/
 204          void ElecMotor_Delay_ACW(void)
 205             {
 206   1      
 207   1         Delay_500ms();
 208   1         Delay_500ms();
 209   1         Delay_500ms();
 210   1         
 211   1         #ifdef Guxingzha
 212   1         Delay_500ms();
 213   1         Delay_500ms();
 214   1         Delay_500ms();
 215   1         Delay_500ms();
 216   1         Delay_500ms();
 217   1         Delay_500ms();
 218   1         #endif
 219   1         
 220   1         #ifdef Z3
                 Delay_500ms();
                 #endif
 223   1      
 224   1         }
 225          
 226          /*----------------------------------------------------
 227             ElecMotor_test()
 228             Delay program for Electric Motor.
 229          -----------------------------------------------------*/
 230          void ElecMotor_test(void)
 231             {
 232   1         if(CW_flag == 1)
 233   1            {
 234   2            Elecmotor_duration_G += 1;
 235   2            if(Elecmotor_duration_G >= 10)
 236   2               {
 237   3               Elecmotor_duration_G = 0;
 238   3               ElecMotor_CW();
 239   3               CW_flag = 0;
 240   3               }
C51 COMPILER V9.54   ELECMOTOR                                                             11/15/2016 14:57:56 PAGE 5   

 241   2            }
 242   1         else
 243   1            {
 244   2            Elecmotor_duration_G += 1;
 245   2            if(Elecmotor_duration_G >= 10)
 246   2               {
 247   3               Elecmotor_duration_G = 0;
 248   3               ElecMotor_ACW();
 249   3               CW_flag = 1;
 250   3               }     
 251   2            }
 252   1         }
 253          
 254          /*---------------------------------------------------
 255             end of file
 256          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    347    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
