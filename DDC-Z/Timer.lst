C51 COMPILER V9.54   TIMER                                                                 06/10/2015 16:56:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Timer.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\Timer.c COMPACT OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Timer.lst) TABS(3) OBJECT(.\Timer.obj)

line level    source

   1          /*---------------------------------------------------
   2             Timer.c (v1.00)
   3             
   4             Timer functions
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Timer.h"
  11          #include "communication.h"
  12          #include "voice.h"
  13          #include "Delay.h"
  14          #include "Battery.h"
  15          #include "AD.h"
  16          #include "Other.h"
  17          #include "operation.h"
  18          
  19          // ------ Private variable definitions -----------------------------
  20          tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;     // register value of timer0 and timer1, caculated from 
             -InitTimer()
  21          
  22          
  23          /*--------------------------------------------------
  24             InitTimer()
  25             
  26             初始化定时器T0和T1
  27          ---------------------------------------------------*/
  28          
  29          void InitTimer(const tByte Tick_ms_T0, Tick_us_T1)
  30             {
  31   1         tLong Inc_T0, Inc_T1;
  32   1         tWord timer0_16, timer1_16;
  33   1         
  34   1         //计算Timer0的寄存器值
  35   1         Inc_T0 = (tLong)Tick_ms_T0 * (OSC_FREQ/1000) / (tLong)OSC_PER_INST;
  36   1         timer0_16 = (tWord) (65536UL - Inc_T0);
  37   1         timer0_8H = (tByte) (timer0_16 / 256);
  38   1         timer0_8L = (tByte) (timer0_16 % 256);
  39   1         
  40   1         //计算Timer1的寄存器值
  41   1         Inc_T1 = (tLong)Tick_us_T1 * (OSC_FREQ/1000000) / (tLong)OSC_PER_INST;
  42   1         timer1_16 = (tWord) (65536UL - Inc_T1);
  43   1         timer1_8H = (tByte) (timer1_16 / 256);
  44   1         timer1_8L = (tByte) (timer1_16 % 256);
  45   1         
  46   1         TMOD = 0x11;
  47   1         
  48   1         TH0 = timer0_8H;
  49   1         TL0 = timer0_8L;
  50   1         TH1 = timer1_8H;
  51   1         TL1 = timer1_8L;
  52   1      
  53   1         ET0 = 1;
C51 COMPILER V9.54   TIMER                                                                 06/10/2015 16:56:24 PAGE 2   

  54   1         TR0 = 1;
  55   1         ET1 = 1;
  56   1         TR1 = 1;
  57   1         PT1 = 1;       
  58   1         EA = 1;
  59   1         }
  60          
  61          /*-----------------------------------------------------------------
  62             初始化T0，在初始化了串口之后
  63          -----------------------------------------------------------------*/
  64          void InitT0(const tByte Tick_ms_T0)
  65             {
  66   1         tLong Inc_T0;
  67   1         tWord timer0_16;
  68   1         
  69   1         //计算Timer0的寄存器值
  70   1         Inc_T0 = (tLong)Tick_ms_T0 * (OSC_FREQ/1000) / (tLong)OSC_PER_INST;
  71   1         timer0_16 = (tWord) (65536UL - Inc_T0);
  72   1         timer0_8H = (tByte) (timer0_16 / 256);
  73   1         timer0_8L = (tByte) (timer0_16 % 256);
  74   1         TMOD = 0x21;
  75   1         }
  76          
  77          /*---------------------------------------------------------------------
  78             sEos_Go_To_Sleep()
  79             将MCU进入休眠状态
  80          ----------------------------------------------------------------------*/
  81          void sEOS_Go_To_Sleep(void)
  82             {
  83   1         PCON |= 0x01;    // Enter idle mode (generic 8051 version)
  84   1         }
  85             
  86          /*---------------------------------------------------
  87             end of file
  88          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      4       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
