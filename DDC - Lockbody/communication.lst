C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE COMMUNICATION
OBJECT MODULE PLACED IN .\communication.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\communication.c COMPACT ROM(COMPACT) OPTI
                    -MIZE(8,SPEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\communication.lst) TABS(3) OBJECT(.\communication.obj
                    -)

line level    source

   1          /*---------------------------------------------------
   2             communication.c (v1.00)
   3             
   4             通信程序
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "communication.h"
  11          #include "Delay.h"
  12          #include "uart.h"
  13          
  14          /*------ private variable --------------------------*/
  15          tByte myTxRxData[7] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  16          //tByte IDkey11 = IDkey6^IDkey7^IDkey8^IDkey9^IDkey10;
  17          
  18          /*------- Public variable declarations --------------------------*/
  19          extern tByte receive_LV_count;      
  20          extern bit receive_wire_flag;    
  21          extern tByte one_receive_byte;      
  22          extern tByte one_receive_byte_count;         
  23          extern tByte receive_HV_count;      
  24          extern tByte data_count;            
  25          extern tByte received_data_buffer[7];     
  26          extern bit receive_data_finished_flag;    
  27          
  28          extern code tByte IDkey6;
  29          extern code tByte IDkey7;
  30          extern code tByte IDkey8;
  31          extern code tByte IDkey9;
  32          extern code tByte IDkey10;
  33          
  34          /*----------------------------------------------------
  35             InitTransceiver()
  36             Initialise Transceiver
  37          ----------------------------------------------------*/
  38          void InitTransceiver(void)
  39             {
  40   1         P10 = High;
  41   1         transmiter_EN = Close;
  42   1         receiver_EN = Open;  
  43   1         transmiter_power = 0;      // High power mode
  44   1         }
  45             
  46          /*----------------------------------------------------
  47             initsignal()
  48             
  49             初始化信号程序，接收机在接接收信号的时候，需要有
  50             一段代码来使接收机打开，而这一段程序有可能无法识别
  51             出来，而是相当于废代码，只占用通信时间。
  52          ----------------------------------------------------*/
  53          void initsignal()
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 2   

  54             {
  55   1         tByte k,k1;
  56   1         tByte mystartbuffer = 0xaa;
  57   1         for(k1 = 0; k1 < 1; k1++)
  58   1            {
  59   2            for(k=0;k<8;k++)
  60   2               {
  61   3               if((mystartbuffer&0x80) == 0x80)//为1
  62   3                  {
  63   4                  P10=0;
  64   4                  Custom_Delay(46, 20);
  65   4      //          Delay_5ms();
  66   4                  }
  67   3               else
  68   3                  {
  69   4                  P10=0;
  70   4                  Custom_Delay(46, 20);
  71   4      //          Delay_5ms();
  72   4                  }
  73   3               P10=1;
  74   3               mystartbuffer<<=1;
  75   3               Custom_Delay(40, 24);
  76   3      //       Delay_5ms();
  77   3               }
  78   2            mystartbuffer=0xaa;
  79   2      //    Delay_5ms();
  80   2      //    Custom_Delay(23, 28);
  81   2            }
  82   1         P10=1;
  83   1         }
  84          
  85          void initsignal_F(void)
  86             {
  87   1         tByte k,k1;
  88   1         tByte mystartbuffer = 0xaa;
  89   1         for(k1 = 0; k1 < 1; k1++)
  90   1            {
  91   2            #ifdef Z2
                    for(k=0;k<4;k++)
                    #endif
  94   2            #ifdef Z3
  95   2            for(k=0;k<7;k++)
  96   2            #endif      
  97   2               {
  98   3               if((mystartbuffer&0x80) == 0x80)//为1
  99   3                  {
 100   4                  P10=0;
 101   4                  Custom_Delay(46, 20);
 102   4      //          Delay_5ms();
 103   4                  }
 104   3               else
 105   3                  {
 106   4                  P10=0;
 107   4                  Custom_Delay(46, 20);
 108   4      //          Delay_5ms();
 109   4                  }
 110   3               P10=1;
 111   3               mystartbuffer<<=1;
 112   3               Custom_Delay(40, 24);
 113   3      //       Delay_5ms();
 114   3               }
 115   2            mystartbuffer=0xaa;
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 3   

 116   2      //    Delay_5ms();
 117   2      //    Custom_Delay(23, 28);
 118   2            }
 119   1         P10=1;
 120   1         }
 121          
 122          /*--------------------------------------------------
 123             Send_Data()
 124             将数据发送出去
 125          --------------------------------------------------*/
 126          void Send_Data(tByte x)
 127             {
 128   1         tByte i,n;
 129   1         for(i=0;i<3;i++)
 130   1            {
 131   2            for(n=0;n<8;n++)
 132   2               {
 133   3               if((myTxRxData[i]&0x80)==0x80)
 134   3                  {
 135   4                  P10=0;
 136   4                  Custom_Delay(36, x);
 137   4                  }
 138   3               else
 139   3                  {
 140   4                  P10=0;
 141   4                  Custom_Delay(23, x);
 142   4                  }
 143   3               P10=1;
 144   3               myTxRxData[i]<<=1;
 145   3               Custom_Delay(20, x);
 146   3               }
 147   2            }  
 148   1         }
 149          
 150          /*--------------------------------------------------
 151             ComMode_Data()
 152             
 153             主机接收到编码1信号后，会反馈一个编码1信号给附机
 154             以表示主机在附机附近。
 155          ---------------------------------------------------*/
 156          void ComMode_Data(tByte ComMode, x) 
 157             {
 158   1         receiver_EN = 1;
 159   1         Delay(20);
 160   1         transmiter_EN = 0;
 161   1         myTxRxData[0] = CmdHead;
 162   1         myTxRxData[1] = MyAddress;
 163   1         myTxRxData[2] = ComMode;
 164   1      
 165   1         initsignal();
 166   1         Send_Data(x);
 167   1         
 168   1         transmiter_EN = 1;
 169   1         receiver_EN = 1;
 170   1         }
 171          
 172          /*--------------------------------------------------
 173             ComMode_Data_WX()
 174             
 175             主机接收到编码1信号后，会反馈一个编码1信号给附机
 176             以表示主机在附机附近。
 177          ---------------------------------------------------*/
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 4   

 178          void ComMode_Data_WX(tByte ComMode, x) 
 179             {
 180   1         receiver_EN = 1;
 181   1         Delay(20);
 182   1         transmiter_EN = 0;
 183   1         myTxRxData[0] = CmdHead;
 184   1         myTxRxData[1] = MyAddress;
 185   1         myTxRxData[2] = ComMode;
 186   1      
 187   1         initsignal();
 188   1         Send_Data(x);
 189   1         
 190   1         transmiter_EN = 0;
 191   1         receiver_EN = 0;
 192   1         TXD = 0;
 193   1         }
 194          
 195          /*------------------------------------------------------------------
 196             UART发送数据
 197          ------------------------------------------------------------------*/
 198          void UART_Send_Data(tByte command)
 199             {
 200   1         tByte ii = 0;
 201   1         open_tranceiver();
 202   1         myTxRxData[0] = IDkey6;
 203   1         myTxRxData[1] = IDkey7;
 204   1         myTxRxData[2] = IDkey8;
 205   1         myTxRxData[3] = IDkey9;
 206   1         myTxRxData[4] = IDkey10;
 207   1         myTxRxData[5] = command;
 208   1         
 209   1         initsignal();
 210   1         
 211   1         for(ii = 0; ii < 160; ii++)
 212   1            {
 213   2            SendNByte(myTxRxData, 6);
 214   2            Delay_10ms();     
 215   2            }
 216   1      
 217   1         close_tranceiver();
 218   1         Delay_500ms();
 219   1         }
 220          
 221          /*------------------------------------------------------------------
 222             UART附机发送数据
 223          ------------------------------------------------------------------*/
 224          void UART_Send_Data_F(tByte command)
 225             {
 226   1         tByte ii = 0;
 227   1         open_tranceiver_F();
 228   1      
 229   1         myTxRxData[0] = IDkey6;
 230   1         myTxRxData[1] = IDkey7;
 231   1         myTxRxData[2] = IDkey8;
 232   1         myTxRxData[3] = IDkey9;
 233   1         myTxRxData[4] = IDkey10;
 234   1         myTxRxData[5] = command;
 235   1      
 236   1         initsignal_F();   
 237   1         
 238   1         SendNByte(myTxRxData, 6);
 239   1      
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 5   

 240   1         receiver_EN = 0;
 241   1      
 242   1         open_tranceiver_F();
 243   1         }
 244          
 245          /*------------------------------------------------------------------
 246             UART附机发送数据
 247          ------------------------------------------------------------------*/
 248          void UART_Send_Data_F2(tByte command)
 249             {
 250   1         tByte ii = 0;
 251   1         open_tranceiver();
 252   1         myTxRxData[0] = IDkey6;
 253   1         myTxRxData[1] = IDkey7;
 254   1         myTxRxData[2] = IDkey8;
 255   1         myTxRxData[3] = IDkey9;
 256   1         myTxRxData[4] = IDkey10;
 257   1         myTxRxData[5] = command;
 258   1         
 259   1         Delay_1ms();
 260   1         Delay_1ms();
 261   1         Delay_1ms();
 262   1         SendNByte(myTxRxData, 6);
 263   1      
 264   1         receiver_EN = 0;
 265   1         
 266   1         #ifdef Z3
 267   1         InitUART(BAUD1200);
 268   1         #endif
 269   1         }
 270          
 271          /*------------------------------------------------------------------
 272             open_tranceiver()
 273             开发射机
 274          -------------------------------------------------------------------*/
 275          void open_tranceiver(void)
 276             {
 277   1         #ifdef Z3
 278   1         InitUART(BAUD1200);
 279   1         #endif
 280   1         
 281   1         receiver_EN = 1;
 282   1         transmiter_EN = 0;   
 283   1         }
 284          
 285          /*------------------------------------------------------------------
 286             open_tranceiver_F()
 287             开发射机
 288          -------------------------------------------------------------------*/
 289          void open_tranceiver_F(void)
 290             {
 291   1         InitUART(BAUD9600);
 292   1         
 293   1         receiver_EN = 1;
 294   1         transmiter_EN = 0;   
 295   1         }
 296          
 297          /*------------------------------------------------------------------
 298             close_tranceiver()
 299             开发射机
 300          -------------------------------------------------------------------*/
 301          void close_tranceiver(void)
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 6   

 302             {
 303   1      
 304   1         #ifdef F3
 305   1         transmiter_EN = 1;
 306   1         #endif
 307   1         
 308   1         receiver_EN = 0;
 309   1         
 310   1         #ifdef Z3
 311   1         InitUART(BAUD9600);
 312   1         #endif
 313   1         }
 314          /*------------------------------------------------------------------
 315             close_tranceiver_F()
 316             开发射机
 317          -------------------------------------------------------------------*/
 318          void close_tranceiver_F(void)
 319             {
 320   1         #ifdef F3
 321   1         transmiter_EN = 1;
 322   1         #endif
 323   1         
 324   1         receiver_EN = 0;
 325   1         
 326   1         InitUART(BAUD1200);
 327   1         }
 328          
 329          /*------------------------------------------------------------------
 330             UART发送数据
 331          ------------------------------------------------------------------*/
 332          void UART_Send_Data_match(void)
 333             {
 334   1         open_tranceiver();
 335   1         
 336   1         myTxRxData[0] = CmdHead;
 337   1         myTxRxData[1] = ComMode_1;
 338   1         myTxRxData[2] = IDkey6;
 339   1         myTxRxData[3] = IDkey7;
 340   1         myTxRxData[4] = IDkey8;
 341   1         myTxRxData[5] = IDkey9;
 342   1         myTxRxData[6] = IDkey10;
 343   1         
 344   1         initsignal();
 345   1         
 346   1         SendNByte(myTxRxData, 8);
 347   1         Delay_50ms();
 348   1         
 349   1         close_tranceiver();
 350   1         }
 351          
 352          /*-----------------------------------------------------------------------------
 353             receive_byte()
 354             receive a byte program
 355          -----------------------------------------------------------------------------*/
 356          void receive_byte(void)
 357             {
 358   1         // P11 constantly HV, if detected a LV, judge it.
 359   1         if(P11 == 0)
 360   1            {
 361   2            // count the LV time, if more than 12ms, reset it.
 362   2            if(++receive_LV_count >= 120)
 363   2               {
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 7   

 364   3               receive_LV_count = 0;
 365   3               }
 366   2            receive_wire_flag = 0;
 367   2            }
 368   1         // if P11 return to HV
 369   1         else
 370   1            {
 371   2            // and already have LV before, so we think it maybe a bit signal
 372   2            if(receive_wire_flag == 0)
 373   2               {
 374   3               // set the flag, to judge a bit only one time
 375   3               receive_wire_flag = 1;
 376   3      
 377   3               // judge the LV time, if 3.5ms < time < 8ms, we think it is a "0". time<3.5ms means a noise.
 378   3               if((receive_LV_count > 35)&&(receive_LV_count <= 80)) 
 379   3                  {
 380   4                  // save "0" to one byte
 381   4                  one_receive_byte <<= 1;
 382   4                  one_receive_byte &= 0xfe;
 383   4                  one_receive_byte_count++;
 384   4                  receive_HV_count = 0;
 385   4                  }
 386   3               // time > 8ms, means a "1"
 387   3               else if((receive_LV_count > 80))
 388   3                  {
 389   4                  // save "1" to one byte
 390   4                  one_receive_byte <<= 1;
 391   4                  one_receive_byte |= 0x01;
 392   4                  one_receive_byte_count++;
 393   4                  receive_HV_count = 0;
 394   4                  }        
 395   3               else
 396   3                  {
 397   4                  // increase the count for HV
 398   4                  receive_HV_count++;  
 399   4                  }
 400   3               // reset LV count
 401   3               receive_LV_count = 0;
 402   3               }
 403   2            else
 404   2               {
 405   3               // judge whether HV count > 6ms, if yes, means a restart
 406   3               if(++receive_HV_count >= 60)
 407   3                  {
 408   4                  one_receive_byte_count = 0;
 409   4                  receive_wire_flag = 1;
 410   4                  data_count = 0;
 411   4                  }     
 412   3               }
 413   2            }
 414   1         }
 415          
 416          /*-----------------------------------------------------------------------------
 417             receive_byte_Lock()
 418             receive a byte program
 419          -----------------------------------------------------------------------------*/
 420          void receive_byte_Lock(void)
 421             {
 422   1         // P11 constantly HV, if detected a LV, judge it.
 423   1         if(receive_wire == 1)
 424   1            {
 425   2            // count the LV time, if more than 12ms, reset it.
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 8   

 426   2            if(++receive_LV_count >= 120)
 427   2               {
 428   3               receive_LV_count = 0;
 429   3               }
 430   2            receive_wire_flag = 0;
 431   2            }
 432   1         // if P11 return to HV
 433   1         else
 434   1            {
 435   2            // and already have LV before, so we think it maybe a bit signal
 436   2            if(receive_wire_flag == 0)
 437   2               {
 438   3               // set the flag, to judge a bit only one time
 439   3               receive_wire_flag = 1;
 440   3      
 441   3               // judge the LV time, if 3.5ms < time < 8ms, we think it is a "0". time<3.5ms means a noise.
 442   3               if((receive_LV_count > 35)&&(receive_LV_count <= 80)) 
 443   3                  {
 444   4                  // save "0" to one byte
 445   4                  one_receive_byte <<= 1;
 446   4                  one_receive_byte &= 0xfe;
 447   4                  one_receive_byte_count++;
 448   4                  receive_HV_count = 0;
 449   4                  }
 450   3               // time > 8ms, means a "1"
 451   3               else if((receive_LV_count > 80))
 452   3                  {
 453   4                  // save "1" to one byte
 454   4                  one_receive_byte <<= 1;
 455   4                  one_receive_byte |= 0x01;
 456   4                  one_receive_byte_count++;
 457   4                  receive_HV_count = 0;
 458   4                  }        
 459   3               else
 460   3                  {
 461   4                  // increase the count for HV
 462   4                  receive_HV_count++;  
 463   4                  }
 464   3               // reset LV count
 465   3               receive_LV_count = 0;
 466   3               }
 467   2            else
 468   2               {
 469   3               // judge whether HV count > 6ms, if yes, means a restart
 470   3               if(++receive_HV_count >= 60)
 471   3                  {
 472   4                  one_receive_byte_count = 0;
 473   4                  receive_wire_flag = 1;
 474   4                  data_count = 0;
 475   4                  }     
 476   3               }
 477   2            }
 478   1         }
 479          
 480          /*-----------------------------------------------------------------------------
 481             receive_word()
 482             receive a word program
 483          -----------------------------------------------------------------------------*/
 484          void receive_word(void)
 485             {
 486   1         // one byte have 8 bit, once receive a bit, the count increase, once it is 8, it means a byte received.
 487   1         if(one_receive_byte_count == 8)
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 9   

 488   1            {
 489   2            one_receive_byte_count = 0;
 490   2            // assign one byte to buffer[i] 
 491   2            received_data_buffer[data_count] = one_receive_byte;
 492   2            
 493   2            // judge whether buffer[0] is CmdHead
 494   2            if((data_count == 0) && (received_data_buffer[0] == CmdHead))
 495   2               {
 496   3               data_count = 1;
 497   3               }
 498   2            // judge whether buffer[1] is MyAddress
 499   2            else if((data_count == 1) && (received_data_buffer[1] == MyAddress))
 500   2               {
 501   3               data_count = 2;
 502   3               }
 503   2            else if(data_count == 2)
 504   2               {
 505   3               receive_data_finished_flag = 1;
 506   3               data_count = 0;
 507   3               }
 508   2            else 
 509   2               {
 510   3               data_count = 0;
 511   3               }
 512   2            }
 513   1         }
 514          
 515          /*--------------------------------------------------
 516             send_code_to_lock()
 517             
 518             将密码发送给锁体。
 519          ---------------------------------------------------*/
 520          void send_code_to_lock(tByte x, y)  
 521          {
 522   1         unsigned char i,n;
 523   1         myTxRxData[0]=CmdHead;
 524   1         myTxRxData[1]=MyAddress;
 525   1         myTxRxData[2]=x;
 526   1      /* myTxRxData[3]=0x00;
 527   1         myTxRxData[4]=0x00;
 528   1         myTxRxData[5]=0x00;
 529   1         myTxRxData[6]=0x00;
 530   1      */
 531   1         for(i=0;i<3;i++)
 532   1         {
 533   2            for(n=0;n<8;n++)
 534   2            {
 535   3               if((myTxRxData[i]&0x80) == 0x80)//为1
 536   3               {
 537   4                  MagentControl_2 = 0;
 538   4                  Custom_Delay(36, y);
 539   4               }
 540   3               else//为0的情况
 541   3               {
 542   4                  MagentControl_2 = 0;
 543   4                  Custom_Delay(23, y);
 544   4               }
 545   3               MagentControl_2 = 1;    //常态为高电平
 546   3               myTxRxData[i] <<= 1;
 547   3               Custom_Delay(15, y);
 548   3            }
 549   2         }
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 10  

 550   1      }
 551          
 552          /*--------------------------------------------------
 553             send_code_to_lock_Taili()
 554             
 555             将密码发送给锁体。
 556          ---------------------------------------------------*/
 557          void send_code_to_lock_Taili(tByte x, y)  
 558          {
 559   1         unsigned char i,n;
 560   1         myTxRxData[0]=CmdHead;
 561   1         myTxRxData[1]=MyAddress;
 562   1         myTxRxData[2]=x;
 563   1      /* myTxRxData[3]=0x00;
 564   1         myTxRxData[4]=0x00;
 565   1         myTxRxData[5]=0x00;
 566   1         myTxRxData[6]=0x00;
 567   1      */
 568   1         for(i=0;i<3;i++)
 569   1         {
 570   2            for(n=0;n<8;n++)
 571   2            {
 572   3               if((myTxRxData[i]&0x80) == 0x80)//为1
 573   3               {
 574   4                  lock_code = 0;
 575   4                  Custom_Delay(36, y);
 576   4               }
 577   3               else//为0的情况
 578   3               {
 579   4                  lock_code = 0;
 580   4                  Custom_Delay(23, y);
 581   4               }
 582   3               lock_code = 1;    //常态为高电平
 583   3               myTxRxData[i] <<= 1;
 584   3               Custom_Delay(15, y);
 585   3            }
 586   2         }
 587   1      }
 588          
 589          /*------------------------------------------------------------------
 590             UART发送数据
 591          ------------------------------------------------------------------*/
 592          void UART_Send_Data_Broadtest(tByte command)
 593             {
 594   1         tByte ii = 0;
 595   1      // open_tranceiver();
 596   1      
 597   1         myTxRxData[0] = IDkey6;
 598   1         myTxRxData[1] = IDkey7;
 599   1         myTxRxData[2] = IDkey8;
 600   1         myTxRxData[3] = IDkey9;
 601   1         myTxRxData[4] = IDkey10;
 602   1         myTxRxData[5] = command;
 603   1         
 604   1         initsignal();
 605   1         
 606   1         for(ii = 0; ii < 10; ii++)
 607   1            {
 608   2            SendNByte(myTxRxData, 6);
 609   2            Delay_10ms();     
 610   2            }
 611   1      
C51 COMPILER V9.54   COMMUNICATION                                                         09/11/2015 11:40:13 PAGE 11  

 612   1      // close_tranceiver();
 613   1      // Delay_500ms();
 614   1         }
 615          
 616          
 617          /*---------------------------------------------------
 618             end of file
 619          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      7      30
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
