C51 COMPILER V9.54   BATTERY                                                               10/21/2016 17:00:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\Battery.c COMPACT ROM(COMPACT) OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Battery.lst) TABS(3) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2             Battery.c (v1.00)
   3             Battery201603（70km48V）r1
   4          ---------------------------------------------------*/
   5          
   6          #include "main.h"
   7          #include "port.h"
   8          
   9          #include "Battery.h"
  10          #include "voice.h"
  11          #include "Delay.h"
  12          #include "AD.h"
  13          #define Max_battery 0x211
  14          
  15          extern tWord ADC_check_result;      
  16          extern tWord load_battery_result;
  17          tByte Check2_stage = 0;
  18          tByte Battery_level = 0;
  19          
  20          /*----------------------------------------------------
  21             Check_motor_accumulator() - 48V 电平
  22             Check P20's voltage.
  23          -----------------------------------------------------*/
  24          void Check_motor_accumulator(void)
  25             {
  26   1         // detect the battery voltage
  27   1         ADC_check_result = GetADCResult(6);
  28   1         }
  29          /*-----------------------------------------
  30             Broadcast_battery()
  31             
  32          ------------------------------------------*/
  33          void Broadcast_battery(void)
  34             {
  35   1         if((ADC_check_result < load_battery_result)||(ADC_check_result > Max_battery))
  36   1            {
  37   2            load_battery_result = ADC_check_result;
  38   2            }  
  39   1         verifybattery(load_battery_result);       
  40   1         }
  41          
  42          /*----------------------------------------------------
  43             verifybattery()
  44             voice alarm for battery status with power module
  45          -----------------------------------------------------*/
  46          void verifybattery(tWord Check2)
  47             {  
  48   1         #ifdef Kilometer_65
  49   1         // 电量还能行驶
  50   1         voice_EN = 1;
  51   1         SC_Speech(8);     
  52   1         Delay(70);  
  53   1         // 多少
  54   1         if(Check2 < 0x1dd)
C51 COMPILER V9.54   BATTERY                                                               10/21/2016 17:00:03 PAGE 2   

  55   1            {
  56   2            SC_Speech(13);       // 2
  57   2            Delay(30);
  58   2            }
  59   1         else if((Check2 >= 0x1dd)&&(Check2 < 0x1e5))
  60   1            {
  61   2            SC_Speech(16);       // 5
  62   2            Delay(30);
  63   2            }
  64   1         else if((Check2 >= 0x1e5)&&(Check2 < 0x1ea))
  65   1            {
  66   2            SC_Speech(21);       // 10
  67   2            Delay(30);
  68   2            }
  69   1         else if((Check2 >= 0x1ea)&&(Check2 < 0x1f6))
  70   1            {
  71   2            SC_Speech(13);       // 2
  72   2            Delay(30);
  73   2            SC_Speech(21);       // 10
  74   2            Delay(30);
  75   2            SC_Speech(16);       // 5
  76   2            Delay(30);
  77   2            }
  78   1         else if((Check2 >= 0x1f6)&&(Check2 < 0x1fa))
  79   1            {
  80   2            SC_Speech(14);       // 3
  81   2            Delay(30);
  82   2            SC_Speech(21);       // 10
  83   2            Delay(30);
  84   2            SC_Speech(14);       // 3
  85   2            Delay(30);
  86   2            }
  87   1         else if((Check2 >= 0x1fa)&&(Check2 < 0x202))
  88   1            {
  89   2            SC_Speech(15);       // 4
  90   2            Delay(30);
  91   2            SC_Speech(21);       // 10
  92   2            Delay(30);
  93   2            }
  94   1         else if((Check2 >= 0x202)&&(Check2 < 0x206))
  95   1            {
  96   2            SC_Speech(15);       // 4
  97   2            Delay(30);
  98   2            SC_Speech(21);       // 10
  99   2            Delay(30);
 100   2            SC_Speech(18);       // 7
 101   2            Delay(30);
 102   2            }
 103   1         else if((Check2 >= 0x206)&&(Check2 < 0x20c))
 104   1            {
 105   2            SC_Speech(16);       // 5
 106   2            Delay(30);
 107   2            SC_Speech(21);       // 10
 108   2            Delay(30);
 109   2            SC_Speech(16);       // 5
 110   2            Delay(30);
 111   2            }
 112   1         else if((Check2 >= 0x20c)&&(Check2 < Max_battery))
 113   1            {
 114   2            SC_Speech(17);       // 6
 115   2            Delay(30);
 116   2            SC_Speech(21);       // 10
C51 COMPILER V9.54   BATTERY                                                               10/21/2016 17:00:03 PAGE 3   

 117   2            Delay(30);
 118   2            SC_Speech(14);       // 3
 119   2            Delay(30);
 120   2            }
 121   1         else if(Check2 >= Max_battery)
 122   1            {
 123   2            SC_Speech(18);       // 7
 124   2            Delay(30);
 125   2            SC_Speech(21);       // 10
 126   2            Delay(30);
 127   2            }     
 128   1         // 公里
 129   1         SC_Speech(11);    
 130   1         Delay(60);  
 131   1         voice_EN = 0;
 132   1         SC_RST = 1;
 133   1         Delay_50ms();
 134   1         SC_RST = 0;
 135   1         Delay_50ms();
 136   1         #endif
 137   1         }
 138             
 139          /*---------------------------------------------------
 140             end of file
 141          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    474    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
