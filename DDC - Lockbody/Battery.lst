C51 COMPILER V9.54   BATTERY                                                               11/29/2016 09:22:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\Battery.c COMPACT ROM(COMPACT) OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Battery.lst) TABS(3) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2             Battery.c (v1.00)
   3             Battery201603（70km60V）r1
   4          ---------------------------------------------------*/
   5          
   6          #include "main.h"
   7          #include "port.h"
   8          
   9          #include "Battery.h"
  10          #include "voice.h"
  11          #include "Delay.h"
  12          #include "AD.h"
  13          #define Max_battery 0x293
  14          
  15          extern tWord ADC_check_result;      
  16          extern tWord load_battery_result;
  17          tByte Check2_stage = 0;
  18          tByte Battery_level = 0;
  19          
  20          /*----------------------------------------------------
  21             Check_motor_accumulator() - 48V 电平
  22             Check P20's voltage.
  23          -----------------------------------------------------*/
  24          void Check_motor_accumulator(void)
  25             {
  26   1         // detect the battery voltage
  27   1         ADC_check_result = GetADCResult(6);
  28   1         }
  29          /*-----------------------------------------
  30             Broadcast_battery()
  31             
  32             你好
  33          ------------------------------------------*/
  34          void Broadcast_battery(void)
  35             {
  36   1         if((ADC_check_result < load_battery_result)||(ADC_check_result > Max_battery))
  37   1            {
  38   2            load_battery_result = ADC_check_result;
  39   2            }  
  40   1         verifybattery(load_battery_result);       
  41   1         }
  42          
  43          /*----------------------------------------------------
  44             verifybattery()
  45             voice alarm for battery status with power module
  46          -----------------------------------------------------*/
  47          void verifybattery(tWord Check2)
  48             {  
  49   1         #ifdef Kilometer_65
  50   1         // 电量还能行驶
  51   1         voice_EN = 1;
  52   1         SC_Speech(8);     
  53   1         Delay(70);  
  54   1         // 多少
C51 COMPILER V9.54   BATTERY                                                               11/29/2016 09:22:04 PAGE 2   

  55   1         if(Check2 < 0x242)
  56   1            {
  57   2            SC_Speech(13);       // 2
  58   2            Delay(30);
  59   2            }
  60   1         else if((Check2 >= 0x242)&&(Check2 < 0x250))
  61   1            {
  62   2            SC_Speech(16);       // 5
  63   2            Delay(30);
  64   2            }
  65   1         else if((Check2 >= 0x250)&&(Check2 < 0x25f))
  66   1            {
  67   2            SC_Speech(21);       // 10
  68   2            Delay(30);
  69   2            }
  70   1      /* else if((Check2 >= 0x250)&&(Check2 < 0x25f))
  71   1            {
  72   1            SC_Speech(21);       // 10
  73   1            Delay(30);
  74   1            SC_Speech(17);       // 6
  75   1            Delay(30);
  76   1            }
  77   1         else if((Check2 >= 0x25f)&&(Check2 < 0x267))
  78   1            {
  79   1            SC_Speech(13);       // 2
  80   1            Delay(30);
  81   1            SC_Speech(21);       // 10
  82   1            Delay(30);
  83   1            SC_Speech(13);       // 2
  84   1            Delay(30);
  85   1            }
  86   1         else if((Check2 >= 0x267)&&(Check2 < 0x26f))
  87   1            {
  88   1            SC_Speech(13);       // 2
  89   1            Delay(30);
  90   1            SC_Speech(21);       // 10
  91   1            Delay(30);
  92   1            SC_Speech(19);       // 8
  93   1            Delay(30);
  94   1            }
  95   1         else if((Check2 >= 0x26f)&&(Check2 < 0x279))
  96   1            {
  97   1            SC_Speech(14);       // 3
  98   1            Delay(30);
  99   1            SC_Speech(21);       // 10
 100   1            Delay(30);
 101   1            SC_Speech(15);       // 4
 102   1            Delay(30);
 103   1            }
 104   1         else if((Check2 >= 0x279)&&(Check2 < 0x282))
 105   1            {
 106   1            SC_Speech(15);       // 4
 107   1            Delay(30);
 108   1            SC_Speech(21);       // 10
 109   1            Delay(30);
 110   1            }
 111   1         else if((Check2 >= 0x282)&&(Check2 < 0x28a))
 112   1            {
 113   1            SC_Speech(15);       // 4
 114   1            Delay(30);
 115   1            SC_Speech(21);       // 10
 116   1            Delay(30);
C51 COMPILER V9.54   BATTERY                                                               11/29/2016 09:22:04 PAGE 3   

 117   1            SC_Speech(17);       // 6
 118   1            Delay(30);
 119   1            }
 120   1         else if((Check2 >= 0x28a)&&(Check2 < 0x28e))
 121   1            {
 122   1            SC_Speech(16);       // 5
 123   1            Delay(30);
 124   1            SC_Speech(21);       // 10
 125   1            Delay(30);
 126   1            SC_Speech(13);       // 2
 127   1            Delay(30);
 128   1            }
 129   1         else if((Check2 >= 0x28e)&&(Check2 < 0x291))
 130   1            {
 131   1            SC_Speech(16);       // 5
 132   1            Delay(30);
 133   1            SC_Speech(21);       // 10
 134   1            Delay(30);
 135   1            SC_Speech(19);       // 8
 136   1            Delay(30);
 137   1            }
 138   1         else if((Check2 >= 0x291)&&(Check2 < Max_battery))
 139   1            {
 140   1            SC_Speech(17);       // 6
 141   1            Delay(30);
 142   1            SC_Speech(21);       // 10
 143   1            Delay(30);
 144   1            SC_Speech(15);       // 4
 145   1            Delay(30);
 146   1            }
 147   1         else if(Check2 >= Max_battery)
 148   1            {
 149   1            SC_Speech(18);       // 7
 150   1            Delay(30);
 151   1            SC_Speech(21);       // 10
 152   1            Delay(30);
 153   1            }  
 154   1      */    
 155   1         // 公里
 156   1         SC_Speech(11);    
 157   1         Delay(60);  
 158   1         voice_EN = 0;
 159   1         SC_RST = 1;
 160   1         Delay_50ms();
 161   1         SC_RST = 0;
 162   1         Delay_50ms();
 163   1         #endif
 164   1         }
 165             
 166          /*---------------------------------------------------
 167             end of file
 168          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    176    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   BATTERY                                                               11/29/2016 09:22:04 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
