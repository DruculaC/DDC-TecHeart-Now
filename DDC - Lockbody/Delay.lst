C51 COMPILER V9.54   DELAY                                                                 11/29/2016 09:22:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DELAY
OBJECT MODULE PLACED IN .\Delay.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\Delay.c COMPACT ROM(COMPACT) OPTIMIZE(8,S
                    -PEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Delay.lst) TABS(3) OBJECT(.\Delay.obj)

line level    source

   1          /*---------------------------------------------------
   2             Delay.c (v1.00)
   3             
   4             Delay functions
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Delay.h"
  11          
  12          tWord Timeout_loop = 0;
  13          
  14          /*------------------------------------------------------------------*/
  15          void Delay_1ms(void)
  16             {
  17   1         Timeout_loop = LOOP_TIMEOUT_INIT_001ms;
  18   1      
  19   1         // Simple loop timeout...
  20   1         while (++Timeout_loop != 0);
  21   1         }
  22          /*------------------------------------------------------------------*/
  23          void Delay_5ms(void)
  24             {
  25   1         Timeout_loop = LOOP_TIMEOUT_INIT_005ms;
  26   1      
  27   1         // Simple loop timeout...
  28   1         while (++Timeout_loop != 0);
  29   1         }
  30          /*------------------------------------------------------------------*/
  31          void Delay_10ms(void)
  32             {
  33   1         Timeout_loop = LOOP_TIMEOUT_INIT_010ms;
  34   1      
  35   1         // Simple loop timeout...
  36   1         while (++Timeout_loop != 0);
  37   1         }
  38          /*------------------------------------------------------------------*/
  39          void Delay_12ms(void)
  40             {
  41   1         Timeout_loop = LOOP_TIMEOUT_INIT_012ms;
  42   1      
  43   1         // Simple loop timeout...
  44   1         while (++Timeout_loop != 0);
  45   1         }
  46          
  47          /*------------------------------------------------------------------*/
  48          void Delay_50ms(void)
  49             {
  50   1         Timeout_loop = LOOP_TIMEOUT_INIT_050ms;
  51   1      
  52   1         // Simple loop timeout...
  53   1         while (++Timeout_loop != 0);
  54   1         }
C51 COMPILER V9.54   DELAY                                                                 11/29/2016 09:22:04 PAGE 2   

  55          
  56          /*------------------------------------------------------------------*/
  57          void Delay_100ms(void)
  58             {
  59   1         Timeout_loop = LOOP_TIMEOUT_INIT_100ms;
  60   1      
  61   1         // Simple loop timeout...
  62   1         while (++Timeout_loop != 0);
  63   1         }
  64          
  65          /*------------------------------------------------------------------*/
  66          void Delay_500ms(void)
  67             {
  68   1         Timeout_loop = LOOP_TIMEOUT_INIT_500ms;
  69   1      
  70   1         // Simple loop timeout...
  71   1         while (++Timeout_loop != 0);
  72   1         }
  73          
  74          /*---------------------------------------------------
  75             Delay()
  76             延迟程序
  77          ---------------------------------------------------*/
  78          
  79          void Delay(tByte n)
  80             {
  81   1         tWord x;
  82   1         while(n--)
  83   1            {
  84   2            x=5000;
  85   2            while(x--);
  86   2            }
  87   1         }
  88          
  89          /*---------------------------------------------------
  90             Custom_Delay()
  91             延迟程序
  92          --------------------------------------------------*/
  93          void Custom_Delay(tByte t, m)
  94             {
  95   1         tWord i;
  96   1         tByte j;
  97   1         for(i = 0; i < t; i++)     
  98   1         for(j = 0; j < m; j++);
  99   1         }
 100             
 101          /*--------------------------------------------------
 102             delay_ms()
 103             
 104             延迟约为1ms的子程序
 105          ----------------------------------------------------*/
 106          void delay_ms(tWord count)
 107             {
 108   1         tWord i, j;
 109   1         for(i=0;i<count;i++)
 110   1            {  
 111   2            for(j=0;j<100;j++);
 112   2            }
 113   1         }
 114          
 115          /*--------------------------------------------------
 116             delay_us()
C51 COMPILER V9.54   DELAY                                                                 11/29/2016 09:22:04 PAGE 3   

 117             
 118             延迟约为1us的子程序
 119          ----------------------------------------------------*/
 120          
 121          void delay_us(tWord count1)
 122             {
 123   1         tWord i;
 124   1         tByte j;
 125   1         for(i=0;i<count1;i++)
 126   1            {
 127   2            for(j=0;j<4;j++);
 128   2            }
 129   1         }
 130          
 131          /*----------------------------------------------------
 132             Magnet_Delay()
 133             电磁铁的延迟程序，要在里面加入对过流的判断
 134          -----------------------------------------------------*/
 135          void Magnet_Delay(tWord x, y)
 136             {
 137   1         tByte i;
 138   1         tWord j;                                                                                                 
             -       
 139   1         for(i = 0; i < 50; i++)
 140   1            {
 141   2            for(j = 0; j< x; j++);
 142   2            }
 143   1         for(i = 0; i < 50; i++)
 144   1            {
 145   2            // 检测过流保护是否跳转，如果为1，则表明电流过大
 146   2            if(magnet_overcurrent == 0)
 147   2               {
 148   3               for(j = 0; j< y; j++);
 149   3               }
 150   2            else
 151   2               {
 152   3               return;
 153   3               }
 154   2            }
 155   1         }
 156          
 157          
 158          /*---------------------------------------------------
 159             end of file
 160          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
