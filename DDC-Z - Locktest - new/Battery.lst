C51 COMPILER V9.54   BATTERY                                                               11/04/2016 15:27:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\Battery.c COMPACT ROM(COMPACT) OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Battery.lst) TABS(3) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2             Battery.c (v1.00)
   3             Battery201603£®60km48V£©r1
   4          ---------------------------------------------------*/
   5          
   6          #include "main.h"
   7          #include "port.h"
   8          
   9          #include "Battery.h"
  10          #include "voice.h"
  11          #include "Delay.h"
  12          #include "AD.h"
  13          #define Max_battery 0x211
  14          
  15          extern tWord ADC_check_result;      
  16          extern tWord load_battery_result;
  17          tByte Check2_stage = 0;
  18          tByte Battery_level = 0;
  19          
  20          /*----------------------------------------------------
  21             Check_motor_accumulator() - 48V µÁ∆Ω
  22             Check P20's voltage.
  23          -----------------------------------------------------*/
  24          void Check_motor_accumulator(void)
  25             {
  26   1         // detect the battery voltage
  27   1         ADC_check_result = GetADCResult(6);
  28   1         }
  29          /*-----------------------------------------
  30             Broadcast_battery()
  31             
  32             ??®®?¶Ã?®¢??¶Ã®∫°¿°Í?®®?1?D?¶Ã?¶Ã?®¢??¶ÃD?®Æ®≤?-?®®¶Ã??¶Ã°Í??®∞??D?¶Ã?®¢??¶Ã°‰®Æ®Æ®≤°¡?°‰®Æ¶Ã?®¢??¶Ã°Í??®
             -∞??®®???®®£§2£§°¿°ß?°Í°§??®∞®∫®Æ?a??¶Ã?
  33             2?2£§°¿°ß?°Í
  34          ------------------------------------------*/
  35          void Broadcast_battery(void)
  36             {
  37   1         if((ADC_check_result < load_battery_result)||(ADC_check_result > Max_battery))
  38   1            {
  39   2            load_battery_result = ADC_check_result;
  40   2            }  
  41   1         verifybattery(load_battery_result);       
  42   1         }
  43          
  44          /*----------------------------------------------------
  45             verifybattery()
  46             voice alarm for battery status with power module
  47          -----------------------------------------------------*/
  48          void verifybattery(tWord Check2)
  49             {  
  50   1         #ifdef Kilometer_65
  51   1         // µÁ¡øªπƒ‹–– ª
  52   1         voice_EN = 1;
  53   1         SC_Speech(8);     
C51 COMPILER V9.54   BATTERY                                                               11/04/2016 15:27:04 PAGE 2   

  54   1         Delay(70);  
  55   1         // ∂‡…Ÿ
  56   1         if(Check2 < 0x1dd)
  57   1            {
  58   2            SC_Speech(13);       // 2
  59   2            Delay(30);
  60   2            }
  61   1         else if((Check2 >= 0x1dd)&&(Check2 < 0x1e5))
  62   1            {
  63   2            SC_Speech(16);       // 5
  64   2            Delay(30);
  65   2            }
  66   1         else if((Check2 >= 0x1e5)&&(Check2 < 0x1ea))
  67   1            {
  68   2            SC_Speech(21);       // 10
  69   2            Delay(30);
  70   2            SC_Speech(16);       // 5
  71   2            Delay(30);
  72   2            }
  73   1         else if((Check2 >= 0x1ea)&&(Check2 < 0x1f6))
  74   1            {
  75   2            SC_Speech(13);       // 2
  76   2            Delay(30);
  77   2            SC_Speech(21);       // 10
  78   2            Delay(30);
  79   2            SC_Speech(12);       // 1
  80   2            Delay(30);
  81   2            }
  82   1         else if((Check2 >= 0x1f6)&&(Check2 < 0x1fa))
  83   1            {
  84   2            SC_Speech(13);       // 2
  85   2            Delay(30);
  86   2            SC_Speech(21);       // 10
  87   2            Delay(30);
  88   2            SC_Speech(19);       // 8
  89   2            Delay(30);
  90   2            }
  91   1         else if((Check2 >= 0x1fa)&&(Check2 < 0x202))
  92   1            {
  93   2            SC_Speech(14);       // 3
  94   2            Delay(30);
  95   2            SC_Speech(21);       // 10
  96   2            Delay(30);
  97   2            SC_Speech(15);       // 4
  98   2            Delay(30);
  99   2            }
 100   1         else if((Check2 >= 0x202)&&(Check2 < 0x206))
 101   1            {
 102   2            SC_Speech(15);       // 4
 103   2            Delay(30);
 104   2            SC_Speech(21);       // 10
 105   2            Delay(30);
 106   2            SC_Speech(12);       // 1
 107   2            Delay(30);
 108   2            }
 109   1         else if((Check2 >= 0x206)&&(Check2 < 0x20c))
 110   1            {
 111   2            SC_Speech(15);       // 4
 112   2            Delay(30);
 113   2            SC_Speech(21);       // 10
 114   2            Delay(30);
 115   2            SC_Speech(18);       // 7
C51 COMPILER V9.54   BATTERY                                                               11/04/2016 15:27:04 PAGE 3   

 116   2            Delay(30);
 117   2            }
 118   1         else if((Check2 >= 0x20c)&&(Check2 < Max_battery))
 119   1            {
 120   2            SC_Speech(16);       // 5
 121   2            Delay(30);
 122   2            SC_Speech(21);       // 10
 123   2            Delay(30);
 124   2            SC_Speech(15);       // 4
 125   2            Delay(30);
 126   2            }
 127   1         else if(Check2 >= Max_battery)
 128   1            {
 129   2            SC_Speech(17);       // 6
 130   2            Delay(30);
 131   2            SC_Speech(21);       // 10
 132   2            Delay(30);
 133   2            }     
 134   1         // π´¿Ô
 135   1         SC_Speech(11);    
 136   1         Delay(60);  
 137   1         voice_EN = 0;
 138   1         SC_RST = 1;
 139   1         Delay_50ms();
 140   1         SC_RST = 0;
 141   1         Delay_50ms();
 142   1         #endif
 143   1         }
 144             
 145          /*---------------------------------------------------
 146             end of file
 147          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    494    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       2
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
