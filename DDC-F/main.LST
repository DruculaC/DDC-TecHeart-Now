C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE main.c COMPACT ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(..\Library) DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             main.c (v1.00)
   3             
   4             DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"             
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          #include "battery.h"
  18          #include "UART.h"
  19          #include "ISP_DataFlash.h"
  20          #include "schedular.h"
  21          
  22          
  23          /*------- Public variable declarations --------------------------*/
  24          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  25          extern bit enable_sensor_delayEN;
  26          
  27          bit stolen_alarm_flag = 0;             // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  28          bit position_sensor_EN=0;        //Î»ÖÃ´«¸ĞÆ÷£¬¼´µ¹µØÌ§Æğ´«¸ĞÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ĞÆ÷
  29          bit host_stolen_alarm1_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  30          bit host_stolen_alarm2_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒôÊ¹ÄÜ
  31          tByte host_stolen_alarm1_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊı
  32          tByte host_stolen_alarm2_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒô´ÎÊı
  33          bit fell_flag=0;                 //ÅĞ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  34          bit raised_flag=0;               //ÅĞ¶ÏÖ÷»ú±»Ì§Æğºó£¬ÖÃ1
  35          tByte sensor_2ndstage_count = 0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  36          tWord sensor_3rdstage_time = 0;        //´«¸ĞÆ÷½øÈëµÚÈı½×¶ÎµÄÊ±¼ä£¬
  37          tByte sensor_3rdstage_effcount = 0;    //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬ÓĞĞ§´¥Åö´ÎÊıµÄ¼ÆÊı
  38          tByte sensor_3rdstage_count = 0;       //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊı
  39          tWord sensor_3rdstage_interval = 0;    //´«¸ĞÆ÷ÔÚµÚÈı½×¶ÎÖĞ£¬Ã¿´ÎÓĞĞ§µÍµçÆ½¼ÆÊıÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓĞĞ§¡£
  40          bit raised_fell_flag = 0;              //µ¹µØ»òÕßÌ§Æğ´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  41          tByte sensor_trigger_count=0;    //´«¸ĞÆ÷´¥·¢¼ÆÊı
  42          tWord sensor_2ndstage_time=0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊı
  43          tByte sensor_1ststage_count=0;   //´«¸ĞÆ÷µÚÒ»½×¶ÎÅĞ¶ÏµÍµçÆ½µÄ¼ÆÊı
  44          tByte nearby_away_interval = 0;     //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  45          
  46          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æğºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  47          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  48          tWord timer0_count=0;      // counter for timer0, increment every ticket         
  49          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};     //½ÓÊÕÊı¾İ»º´æ
  50          bit receive_data_finished_flag = 0;    //½ÓÊÕÕâÒ»´®Êı¾İÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  51          tByte data_count = 0;            //½ÓÊÕÊı¾İ»º´æµÄÎ»Êı£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊı¾İ
  52          tByte one_receive_byte = 0;      //½ÓÊÕÊı¾İµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 2   

  53          tByte one_receive_byte_count = 0;         //one_receive_byteÓĞ8Î»£¬´Ë¼ÆÊı±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊıµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  54          bit receive_wire_flag = 1;       //½ÓÊÕÍ¨ĞÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅĞ¶ÏP1.1Ò»´
             -Î¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕıÈ·µÄÏÂ½µÑØ
  55          tByte receive_HV_count = 0;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓĞĞÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊı£¬Ò»µ©³¬¹ıÄ³¸öÖµ£¬Ôò½«one_receive
             -_byte_countÇå0
  56          tByte receive_LV_count = 0;      //Ã¿´Îtimer1Òç³öÊ±ÅĞ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊı¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  57          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  58          tByte raise_wire_time=0;         //Ì§Æğ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  59          tWord raised_fell_number = 0;          //µ¹µØ»òÕßÌ§Æğ³ö·¢ºó£¬¼ÆÊı£¬µ½´ïÒ»¶¨ÊıÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆğÇåÁã¡£
  60          bit raised_fell_once_flag = 0;         //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ı£¬Èç¹û±êÖ¾¹ıÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆğÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  61          tByte key_rotated_on_flag=0;        //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  62          tWord ADC_check_result = 0;      //×÷ÎªAD¼ì²âÖµ
  63          tByte wire_broken_count = 0;     // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  64          bit battery_stolen_EN = 0;       // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  65          tByte battery_stolen_count = 0;  // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊı
  66          bit horizontal_vibration = 0;    // ±íÊ¾´¹Ö±´«¸ĞÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ĞĞ¹ØÔ¿³×µÄ²Ù×÷¡
  67          tWord horizontal_vibration_count = 0;  //´¹Ö±´«¸ĞÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øĞĞ¼ÆÊı¡£
  68          bit vibration_flag = 0;
  69          tWord vibration_count = 0;
  70          bit wire_broken_flag = 0;        // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  71          bit IDkey_flag = 0;        // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ıºóÖÃ1£¬
  72          tByte IDkey_count = 0;     // ID¿¨ÈÏÖ¤Í¨¹ıºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  73          tByte enable_sensor_delay_count = 0;      // ´«¸ĞÆ÷ÑÓ³ÙµÄÊ±¼ä
  74          bit sensor_3rdalarm_flag = 0;
  75          bit wheeled_flag = 0;
  76          tWord wheeled_count = 0;
  77          tWord match_button_count = 0;
  78          tWord Press_open_button_count = 0;
  79          
  80          // ------ Private variable definitions -----------------------------
  81          tWord stolen_alarm_count = 0;
  82          bit raised_alarm_flag = 0;
  83          bit fell_alarm_flag = 0;
  84          bit Host_battery_high_flag = 0;
  85          bit wire_broken_EN = 0;
  86          tWord Mode_detect_count = 0;
  87          bit Mode_select = 0; // Ä£Ê½Ñ¡Ôñ£¬0±íÊ¾×Ô¶¯Ä£Ê½£¬1±íÊ¾ÊÖ¶¯Ä£Ê½
  88          
  89          bit powersave_enable = 0;
  90          
  91          bit itrpt_EN = 1;
  92          tByte itrpt_count = 0;
  93          bit idle_EN = 0;
  94          
  95          bit Auto_transmit = 0;        // 0±íÊ¾·Ç×Ô¶¯·¢ËÍÊı¾İ£¬1±íÊ¾×Ô¶¯·¢ËÍÊı¾İ½øĞĞÈÏÖ¤
  96          bit IDflash_EN = 0;
  97          tWord match_button_HVcount = 0;
  98          tWord match_button_LVcount = 0;
  99          bit match_button_flag1 = 0;
 100          bit match_button_flag2 = 0;
 101          bit match_button_flag3 = 0;
 102          bit match_button_flag4 = 0;
 103          bit match_button_flag5 = 0;
 104          bit match_button_flag6 = 0;
 105          tByte match_button_flag6count = 0;
 106          
 107          tWord receiver_EN_count = 0;
 108          tWord receiver_DisEN_count = 0;
 109          
 110          bit match_moto_EN = 0;
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 3   

 111          
 112          bit battery_LV_flag = 0;
 113          tByte battery_LV_flag_count = 0;
 114          bit battery_HV_flag = 0;
 115          tByte battery_HV_flag_count = 0;
 116          tByte battery_HV_speech_count = 0;
 117          bit battery_HV_speech_over = 0;
 118          
 119          tWord Toggle_button_HV_count = 0;
 120          bit Toggle_button_HV_flag = 0;
 121          
 122          #ifdef WX
 123          code tByte IDkey6 _at_ 0x001ff8;
 124          code tByte IDkey7 _at_ 0x001ff9;
 125          code tByte IDkey8 _at_ 0x001ffa;
 126          code tByte IDkey9 _at_ 0x001ffb;
 127          code tByte IDkey10 _at_ 0x001ffc;
 128          code tByte IDkey11 _at_ 0x001ffd;
 129          #endif
 130          #ifdef ID
              code tByte IDkey6 _at_ 0x003000;
              code tByte IDkey7 _at_ 0x003001;
              code tByte IDkey8 _at_ 0x003002;
              code tByte IDkey9 _at_ 0x003003;
              code tByte IDkey10 _at_ 0x003004;
              code tByte IDkey11 _at_ 0x003005;
              #endif
 138          /*--------------------------------------------------------------*/
 139          
 140          void main(void)
 141             {
 142   1         InitVoice();
 143   1         InitUART(BAUD1200);
 144   1      
 145   1         // ¼üÅÌÖĞ¶Ï³õÊ¼»¯
 146   1         press_open_button = 1;
 147   1         press_close_button = 1;
 148   1         
 149   1         KBLS1 |= 0x03;
 150   1         KBLS0 |= 0x03;
 151   1         KBIF &= 0xfc;
 152   1         KBIE |= 0x03;
 153   1         EKB = 1;
 154   1         EA = 1;
 155   1      
 156   1      // Moto_EN = 1;      //³õÊ¼»¯£¬¹Ø±ÕÂí´ï
 157   1         voice_EN = 0;        //¿ª»úÊ±£¬½«¹¦·Å¹Ø±Õ
 158   1         P10=1;
 159   1            
 160   1         stolen_alarm_count = 0;       //Çå±¨¾¯¼ÆÊıÆ÷
 161   1         stolen_alarm_flag = 0;        //Çå±¨¾¯±êÖ¾
 162   1      
 163   1         transmit_wire = 0;
 164   1         transmiter_EN = 0;      // turn off the transmitter
 165   1         receiver_EN = 0;        // turn on the receiver
 166   1         transceiver_power_enable = 1;         // ÉÏµçÊ±ÎŞÏßÄ£¿éµçÔ´¹Ø±Õ
 167   1         
 168   1         while(1)
 169   1            {
 170   2            if(idle_EN == 1)
 171   2               {
 172   3               idle_EN = 0;
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 4   

 173   3               EKB = 1;
 174   3               PCON |= 0x02;        
 175   3               }
 176   2               
 177   2            // Ö÷»ú±»µÁ±¨¾¯
 178   2            if(stolen_alarm_flag == 1)    
 179   2               {
 180   3               // ÓïÒôÌáÊ¾£¬Âí´ïÕñ¶¯
 181   3               Alarm_stolen_speech();     
 182   3               Moto_Vibration();          
 183   3               stolen_alarm_flag = 0;
 184   3               }  
 185   2      
 186   2            // Ì§ÆğĞÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌĞø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´ÎÌ§ÆğÖ»·¢4±é¡£
 187   2            if(raised_alarm_flag == 1) 
 188   2               {
 189   3               Alarm_raised_speech();     
 190   3               Moto_Vibration();         
 191   3               raised_alarm_flag = 0;
 192   3               }
 193   2      
 194   2            // µ¹µØĞÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌĞø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´Îµ¹µØÖ»·¢4±é¡£
 195   2            if(fell_alarm_flag == 1)
 196   2               {
 197   3               Alarm_fell_speech();      
 198   3               Moto_Vibration();         
 199   3               fell_alarm_flag=0;
 200   3               }
 201   2      
 202   2            if(wire_broken_EN == 1)
 203   2               {
 204   3               wire_broken_speech();
 205   3               Moto_Vibration();         
 206   3               wire_broken_EN = 0;
 207   3               }
 208   2            
 209   2            if(battery_stolen_EN == 1)
 210   2               {
 211   3               Host_battery_high_alarm_speech();
 212   3               battery_stolen_EN = 0;
 213   3               Moto_Vibration();                
 214   3               }
 215   2            
 216   2            sEOS_Go_To_Sleep();        
 217   2            }
 218   1         }
 219          
 220          /*--------------------------------------------------------------------
 221             timerT0()
 222             ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ĞĞµÄ²Ù×÷
 223          --------------------------------------------------------------------*/
 224          
 225          void timer0() interrupt interrupt_timer_0_overflow
 226             {
 227   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
 228   1         TH0 = timer0_8H;
 229   1         TL0 = timer0_8L;
 230   1      
 231   1         // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 232   1         if(++timer0_count >= 2000)    
 233   1            {
 234   2            
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 5   

 235   2            // Ã¿¸ö3s×öÒ»´ÎµçÁ¿¼ì²â£¬²¢½øĞĞÏà¹ØµÄµçÁ¿ÌáÊ¾
 236   2            Check_motor_accumulator();
 237   2            
 238   2            if(ADC_check_result <= 0x368)                 // 3.11V/3.64V µçÁ¿²»×ã
 239   2               {
 240   3               battery_LV_flag = 1;
 241   3               battery_HV_flag = 0;
 242   3               battery_HV_speech_over = 0;
 243   3               }
 244   2            else if(ADC_check_result >= 0x37a)            // 3.52V/4.03V µçÁ¿³ä×ã
 245   2               {
 246   3               battery_HV_flag = 1;
 247   3               battery_LV_flag = 0;
 248   3               }
 249   2            else
 250   2               {
 251   3               battery_LV_flag = 0;
 252   3               battery_HV_flag = 0;
 253   3               }
 254   2                  
 255   2            if(battery_LV_flag == 1)
 256   2               {
 257   3               if(++battery_LV_flag_count > 20)
 258   3                  {
 259   4                  Battery_low_alarm_speech();
 260   4                  battery_LV_flag_count = 0;
 261   4                  }        
 262   3               }
 263   2            
 264   2            if(match_button_flag6 == 1)
 265   2               {
 266   3               #ifdef ID
                       if(++match_button_flag6count > 10)
                       #endif
 269   3               #ifdef WX
 270   3               if(++match_button_flag6count > 1)
 271   3               #endif
 272   3                  {
 273   4                  match_button_HVcount = 0;
 274   4                  match_button_LVcount = 0;
 275   4                  match_button_flag1 = 0;
 276   4                  match_button_flag2 = 0;
 277   4                  match_button_flag3 = 0;
 278   4                  match_button_flag4 = 0;
 279   4                  match_button_flag5 = 0;
 280   4                  match_button_flag6 = 0;
 281   4                  match_moto_EN = 0;
 282   4                  match_button_flag6count = 0;           
 283   4                  }        
 284   3               }     
 285   2            
 286   2            #ifdef WX
 287   2            if((press_close_button == 1)&&(idle_EN == 0))
 288   2               {
 289   3               if(++Toggle_button_HV_count > 150)
 290   3                  {
 291   4                  transceiver_power_enable = 1;
 292   4                  TXD = 0;
 293   4                  MagentControl_2 = 1;
 294   4                  idle_EN = 1;            
 295   4                  }
 296   3               }
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 6   

 297   2            #endif
 298   2            timer0_count = 0;
 299   2            }
 300   1         
 301   1         if(press_close_button == 0)
 302   1            {
 303   2            Toggle_button_HV_flag = 0;
 304   2            Toggle_button_HV_count = 0;
 305   2            MagentControl_2 = 0;
 306   2            }
 307   1      
 308   1         #ifdef ID
                 if((toggle_button == 1)&&(idle_EN == 0))
                    {
                    transceiver_power_enable = 1;
              //    receiver_EN = 0;
              //    transmiter_EN = 0;
              //    RXD = 0;
                    TXD = 0;
                    idle_EN = 1;
                    }
                 #endif
 319   1            
 320   1         if((transceiver_power_enable == 0)&&(match_button_flag6 == 0))
 321   1            {
 322   2            if(++receiver_EN_count > 300)
 323   2               {
 324   3               UART_Send_Data_F(ComMode_1);
 325   3               TXD = 0;
 326   3               
 327   3               transceiver_power_enable = 1;
 328   3               receiver_EN = 0;
 329   3               receiver_EN_count = 0;
 330   3               }
 331   2            }  
 332   1      
 333   1         if((transceiver_power_enable == 1)&&(match_button_flag6 == 0))
 334   1            {     
 335   2            if(++receiver_DisEN_count > 1500)
 336   2               {
 337   3               transceiver_power_enable = 0;
 338   3               
 339   3               receiver_DisEN_count = 0;
 340   3      
 341   3               #ifdef F3
                       receiver_EN = 0;
                       RXD = 1;
                       #endif
 345   3               }
 346   2            }
 347   1         
 348   1         if(press_open_button == 0)
 349   1            {
 350   2            if(++Press_open_button_count > 3000)
 351   2               {
 352   3               transceiver_power_enable = 0;
 353   3               UART_Send_Data_F(ComMode_11);
 354   3               TXD = 0;    
 355   3               transceiver_power_enable = 1;    
 356   3               }
 357   2            }
 358   1         else
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 7   

 359   1            {
 360   2            Press_open_button_count = 0;
 361   2            }
 362   1         
 363   1         if(match_button == 0)
 364   1            {
 365   2            match_button_HVcount = 0;
 366   2                     
 367   2            if(++match_button_LVcount > 4000)
 368   2               {
 369   3               match_button_LVcount = 4002;
 370   3               match_button_flag1 = 0;
 371   3               match_button_flag2 = 0;
 372   3               match_button_flag3 = 0;
 373   3               match_button_flag4 = 0;
 374   3               match_button_flag5 = 0;
 375   3               }
 376   2            else
 377   2               {
 378   3               match_button_flag1 = 1;
 379   3               if(match_button_flag2 == 1)
 380   3                  match_button_flag3 = 1;
 381   3               if(match_button_flag4 == 1)
 382   3                  match_button_flag5 = 1;
 383   3               }
 384   2            
 385   2            battery_LV_flag = 0;
 386   2            battery_HV_flag = 0;
 387   2            }
 388   1         else
 389   1            {
 390   2            match_button_LVcount = 0;
 391   2            
 392   2            if(match_button_flag1 == 1)
 393   2               match_button_flag2 = 1;       
 394   2            if(match_button_flag3 == 1)
 395   2               match_button_flag4 = 1; 
 396   2            if(match_button_flag5 == 1)
 397   2               {
 398   3               match_button_flag6 = 1;
 399   3               match_button_flag5 = 0;
 400   3               
 401   3               transceiver_power_enable = 0;
 402   3               
 403   3               #ifdef ID
                       receiver_EN_count = 0;
                       receiver_EN = 0;
                       RXD = 1;
                       #endif
 408   3               #ifdef WX
 409   3               UART_Send_Data_match();
 410   3               #endif
 411   3      
 412   3               if(match_moto_EN == 0)
 413   3                  {
 414   4                  Moto_Vibration(); 
 415   4                  match_moto_EN = 1;
 416   4                  }
 417   3               }
 418   2               
 419   2            if(++match_button_HVcount > 4000)
 420   2               {
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 8   

 421   3               match_button_HVcount = 4002;
 422   3               match_button_flag1 = 0;
 423   3               match_button_flag2 = 0;
 424   3               match_button_flag3 = 0;
 425   3               match_button_flag4 = 0;
 426   3               match_button_flag5 = 0;
 427   3               match_moto_EN = 0;
 428   3               }
 429   2            }
 430   1      
 431   1         #ifdef ID
                 if(IDflash_EN == 1)
                    {
                    IDflash_EN = 0;
                    match_button_flag1 = 0;
                    match_button_flag2 = 0;
                    match_button_flag3 = 0;
                    match_button_flag4 = 0;
                    match_button_flag5 = 0;
                    match_button_flag6 = 0;
                    match_moto_EN = 0;
                    Self_learn_programming_F();
                    Moto_Vibration();
                    Delay(10);
                    Moto_Vibration();
                    match_button_flag6count = 0;
                    }
                 #endif
 449   1         }
 450          
 451          /*-----------------------------------------------
 452             UART interrupt
 453          -----------------------------------------------*/
 454          void uart_isr() interrupt 4 
 455             {
 456   1         if(RI)
 457   1            {
 458   2            RI=0;
 459   2            received_data_buffer[data_count] = SBUF;
 460   2            
 461   2            if(match_button_flag6 == 0)
 462   2               {
 463   3               // judge whether buffer[0] is CmdHead
 464   3               if((data_count == 0) && (received_data_buffer[0] == IDkey6))
 465   3                  {
 466   4                  data_count = 1;
 467   4                  }
 468   3               else if((data_count == 1) && (received_data_buffer[1] == IDkey7))
 469   3                  {
 470   4                  data_count = 2;
 471   4                  }
 472   3               else if((data_count == 2) && (received_data_buffer[2] == IDkey8))
 473   3                  {
 474   4                  data_count = 3;
 475   4                  }
 476   3               else if((data_count == 3) && (received_data_buffer[3] == IDkey9))
 477   3                  {
 478   4                  data_count = 4;
 479   4                  }
 480   3               else if((data_count == 4) && (received_data_buffer[4] == IDkey10))
 481   3                  {
 482   4                  data_count = 5;
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 9   

 483   4                  }
 484   3               else if(data_count == 5)
 485   3                  {
 486   4                  receive_data_finished_flag = 1;
 487   4                  data_count = 0;
 488   4                  }
 489   3               else 
 490   3                  {
 491   4                  data_count = 0;
 492   4                  }
 493   3      
 494   3               if(receive_data_finished_flag==1)   
 495   3                  {
 496   4                  receive_data_finished_flag=0;       
 497   4                  switch(received_data_buffer[5])
 498   4                     {
 499   5                     case ComMode_2:
 500   5                        {
 501   6                        battery_stolen_EN = 1;
 502   6                        }
 503   5                     break;
 504   5                     
 505   5                     case ComMode_3:
 506   5                        {
 507   6                        stolen_alarm_flag = 1;
 508   6      
 509   6                        raised_alarm_count=0;
 510   6                        raised_alarm_flag=0;
 511   6                        fell_alarm_count=0;
 512   6                        fell_alarm_flag=0;
 513   6                        }
 514   5                     break;
 515   5                  
 516   5                     case ComMode_4:
 517   5                        {
 518   6                        raised_alarm_flag=1;
 519   6      
 520   6                        stolen_alarm_count=0;
 521   6                        stolen_alarm_flag=0;
 522   6                        fell_alarm_count=0;
 523   6                        fell_alarm_flag=0;
 524   6                        }
 525   5                     break;
 526   5      
 527   5                     case ComMode_5:
 528   5                        {
 529   6                        fell_alarm_flag=1;   
 530   6      
 531   6                        stolen_alarm_count=0;
 532   6                        stolen_alarm_flag=0;
 533   6                        raised_alarm_count=0;
 534   6                        raised_alarm_flag=0;
 535   6                        }
 536   5                     break;
 537   5      
 538   5                     case ComMode_6:
 539   5                        {
 540   6                        wire_broken_EN = 1;
 541   6                        }
 542   5                     break;
 543   5                     }
 544   4                  }
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 10  

 545   3               }
 546   2            else
 547   2               {
 548   3               if((data_count == 0)&&(received_data_buffer[0] == CmdHead))
 549   3                  {
 550   4                  data_count = 1;
 551   4                  }
 552   3               else if((data_count == 1)&&(received_data_buffer[1] == ComMode_1))
 553   3                  {
 554   4                  data_count = 2;
 555   4                  }
 556   3               else if(data_count == 2)
 557   3                  {
 558   4                  data_count = 3;
 559   4                  }
 560   3               else if(data_count == 3)
 561   3                  {
 562   4                  data_count = 4;
 563   4                  }
 564   3               else if(data_count == 4)
 565   3                  {
 566   4                  data_count = 5;
 567   4                  }
 568   3               else if(data_count == 5)
 569   3                  {
 570   4                  data_count = 6;
 571   4                  }
 572   3               else if(data_count == 6)
 573   3                  {
 574   4                  data_count = 0;
 575   4                  IDflash_EN = 1;
 576   4                  }
 577   3               else 
 578   3                  {
 579   4                  data_count = 0;
 580   4                  }
 581   3               }     
 582   2            }
 583   1         }
 584          
 585          /*-----------------------------------------------------------
 586             KBI_ISR()
 587             ¼üÅÌÖĞ¶Ï£¬Ê¹Ğ¾Æ¬´ÓÊ¡µçÄ£Ê½ÖĞ»½ĞÑ
 588          -----------------------------------------------------------*/
 589          void KBI_ISR(void) interrupt 7
 590             {
 591   1         EKB = 0;
 592   1         KBIF &= 0xfc;
 593   1         transceiver_power_enable = 0;
 594   1         receiver_EN = 0;
 595   1         RXD = 1;
 596   1         Toggle_button_HV_count = 0;
 597   1      // EKB = 1;
 598   1         }
 599                
 600          /*---------------------------------------------------
 601             end of file
 602          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1047    ----
C51 COMPILER V9.54   MAIN                                                                  07/03/2015 10:06:22 PAGE 11  

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     70    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     38    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
