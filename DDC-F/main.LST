C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE main.c COMPACT ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(..\Library) DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             main.c (v1.00)
   3             
   4             DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"             
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          #include "battery.h"
  18          #include "UART.h"
  19          #include "ISP_DataFlash.h"
  20          #include "schedular.h"
  21          
  22          
  23          /*------- Public variable declarations --------------------------*/
  24          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  25          extern bit enable_sensor_delayEN;
  26          
  27          bit stolen_alarm_flag = 0;             // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  28          bit position_sensor_EN=0;        //Î»ÖÃ´«¸ĞÆ÷£¬¼´µ¹µØÌ§Æğ´«¸ĞÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ĞÆ÷
  29          bit host_stolen_alarm1_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  30          bit host_stolen_alarm2_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒôÊ¹ÄÜ
  31          tByte host_stolen_alarm1_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊı
  32          tByte host_stolen_alarm2_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒô´ÎÊı
  33          bit fell_flag=0;                 //ÅĞ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  34          bit raised_flag=0;               //ÅĞ¶ÏÖ÷»ú±»Ì§Æğºó£¬ÖÃ1
  35          tByte sensor_2ndstage_count = 0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  36          tWord sensor_3rdstage_time = 0;        //´«¸ĞÆ÷½øÈëµÚÈı½×¶ÎµÄÊ±¼ä£¬
  37          tByte sensor_3rdstage_effcount = 0;    //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬ÓĞĞ§´¥Åö´ÎÊıµÄ¼ÆÊı
  38          tByte sensor_3rdstage_count = 0;       //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊı
  39          tWord sensor_3rdstage_interval = 0;    //´«¸ĞÆ÷ÔÚµÚÈı½×¶ÎÖĞ£¬Ã¿´ÎÓĞĞ§µÍµçÆ½¼ÆÊıÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓĞĞ§¡£
  40          bit raised_fell_flag = 0;              //µ¹µØ»òÕßÌ§Æğ´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  41          tByte sensor_trigger_count=0;    //´«¸ĞÆ÷´¥·¢¼ÆÊı
  42          tWord sensor_2ndstage_time=0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊı
  43          tByte sensor_1ststage_count=0;   //´«¸ĞÆ÷µÚÒ»½×¶ÎÅĞ¶ÏµÍµçÆ½µÄ¼ÆÊı
  44          tByte nearby_away_interval = 0;     //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  45          
  46          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æğºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  47          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  48          tWord timer0_count=0;      // counter for timer0, increment every ticket         
  49          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};     //½ÓÊÕÊı¾İ»º´æ
  50          bit receive_data_finished_flag = 0;    //½ÓÊÕÕâÒ»´®Êı¾İÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  51          tByte data_count = 0;            //½ÓÊÕÊı¾İ»º´æµÄÎ»Êı£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊı¾İ
  52          tByte one_receive_byte = 0;      //½ÓÊÕÊı¾İµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 2   

  53          tByte one_receive_byte_count = 0;         //one_receive_byteÓĞ8Î»£¬´Ë¼ÆÊı±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊıµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  54          bit receive_wire_flag = 1;       //½ÓÊÕÍ¨ĞÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅĞ¶ÏP1.1Ò»´
             -Î¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕıÈ·µÄÏÂ½µÑØ
  55          tByte receive_HV_count = 0;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓĞĞÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊı£¬Ò»µ©³¬¹ıÄ³¸öÖµ£¬Ôò½«one_receive
             -_byte_countÇå0
  56          tByte receive_LV_count = 0;      //Ã¿´Îtimer1Òç³öÊ±ÅĞ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊı¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  57          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  58          tByte raise_wire_time=0;         //Ì§Æğ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  59          tWord raised_fell_number = 0;          //µ¹µØ»òÕßÌ§Æğ³ö·¢ºó£¬¼ÆÊı£¬µ½´ïÒ»¶¨ÊıÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆğÇåÁã¡£
  60          bit raised_fell_once_flag = 0;         //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ı£¬Èç¹û±êÖ¾¹ıÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆğÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  61          tByte key_rotated_on_flag=0;        //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  62          tWord ADC_check_result = 0;      //×÷ÎªAD¼ì²âÖµ
  63          tByte wire_broken_count = 0;     // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  64          bit battery_stolen_EN = 0;       // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  65          tByte battery_stolen_count = 0;  // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊı
  66          bit horizontal_vibration = 0;    // ±íÊ¾´¹Ö±´«¸ĞÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ĞĞ¹ØÔ¿³×µÄ²Ù×÷¡
  67          tWord horizontal_vibration_count = 0;  //´¹Ö±´«¸ĞÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øĞĞ¼ÆÊı¡£
  68          bit vibration_flag = 0;
  69          tWord vibration_count = 0;
  70          bit wire_broken_flag = 0;        // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  71          bit IDkey_flag = 0;        // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ıºóÖÃ1£¬
  72          tByte IDkey_count = 0;     // ID¿¨ÈÏÖ¤Í¨¹ıºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  73          tByte enable_sensor_delay_count = 0;      // ´«¸ĞÆ÷ÑÓ³ÙµÄÊ±¼ä
  74          bit sensor_3rdalarm_flag = 0;
  75          bit wheeled_flag = 0;
  76          tWord wheeled_count = 0;
  77          tWord match_button_count = 0;
  78          tWord Press_open_button_count = 0;
  79          
  80          // ------ Private variable definitions -----------------------------
  81          tWord stolen_alarm_count = 0;
  82          bit raised_alarm_flag = 0;
  83          bit fell_alarm_flag = 0;
  84          bit Host_battery_high_flag = 0;
  85          bit wire_broken_EN = 0;
  86          tWord Mode_detect_count = 0;
  87          bit Mode_select = 0; // Ä£Ê½Ñ¡Ôñ£¬0±íÊ¾×Ô¶¯Ä£Ê½£¬1±íÊ¾ÊÖ¶¯Ä£Ê½
  88          
  89          bit powersave_enable = 0;
  90          
  91          bit itrpt_EN = 1;
  92          tByte itrpt_count = 0;
  93          bit idle_EN = 0;
  94          
  95          bit Auto_transmit = 0;        // 0±íÊ¾·Ç×Ô¶¯·¢ËÍÊı¾İ£¬1±íÊ¾×Ô¶¯·¢ËÍÊı¾İ½øĞĞÈÏÖ¤
  96          bit IDflash_EN = 0;
  97          tWord match_button_HVcount = 0;
  98          tWord match_button_LVcount = 0;
  99          bit match_button_flag1 = 0;
 100          bit match_button_flag2 = 0;
 101          bit match_button_flag3 = 0;
 102          bit match_button_flag4 = 0;
 103          bit match_button_flag5 = 0;
 104          bit match_button_flag6 = 0;
 105          tByte match_button_flag6count = 0;
 106          
 107          tWord receiver_EN_count = 0;
 108          tWord receiver_DisEN_count = 0;
 109          
 110          bit match_moto_EN = 0;
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 3   

 111          
 112          bit battery_LV_flag = 0;
 113          tByte battery_LV_flag_count = 0;
 114          bit battery_HV_flag = 0;
 115          tByte battery_HV_flag_count = 0;
 116          tByte battery_HV_speech_count = 0;
 117          bit battery_HV_speech_over = 0;
 118          
 119          tWord Toggle_button_HV_count = 0;
 120          bit Toggle_button_HV_flag = 0;
 121          
 122          
 123          
 124          #ifdef WX
 125          code tByte IDkey6 _at_ 0x001ff8;
 126          code tByte IDkey7 _at_ 0x001ff9;
 127          code tByte IDkey8 _at_ 0x001ffa;
 128          code tByte IDkey9 _at_ 0x001ffb;
 129          code tByte IDkey10 _at_ 0x001ffc;
 130          code tByte IDkey11 _at_ 0x001ffd;
 131          #endif
 132          #ifdef ID
              code tByte IDkey6 _at_ 0x003000;
              code tByte IDkey7 _at_ 0x003001;
              code tByte IDkey8 _at_ 0x003002;
              code tByte IDkey9 _at_ 0x003003;
              code tByte IDkey10 _at_ 0x003004;
              code tByte IDkey11 _at_ 0x003005;
              #endif
 140          /*--------------------------------------------------------------*/
 141          
 142          void main(void)
 143             {
 144   1         InitVoice();
 145   1         InitUART(BAUD1200);
 146   1      
 147   1         // ¼üÅÌÖĞ¶Ï³õÊ¼»¯
 148   1         press_open_button = 1;
 149   1         press_close_button = 1;
 150   1         
 151   1         KBLS1 |= 0x03;
 152   1         KBLS0 |= 0x03;
 153   1         KBIF &= 0xfc;
 154   1         KBIE |= 0x03;
 155   1         EKB = 1;
 156   1         EA = 1;
 157   1      
 158   1      // Moto_EN = 1;      //³õÊ¼»¯£¬¹Ø±ÕÂí´ï
 159   1         voice_EN = 0;        //¿ª»úÊ±£¬½«¹¦·Å¹Ø±Õ
 160   1         P10=1;
 161   1            
 162   1         stolen_alarm_count = 0;       //Çå±¨¾¯¼ÆÊıÆ÷
 163   1         stolen_alarm_flag = 0;        //Çå±¨¾¯±êÖ¾
 164   1      
 165   1         transmit_wire = 0;
 166   1         transmiter_EN = 0;      // turn off the transmitter
 167   1         receiver_EN = 0;        // turn on the receiver
 168   1         transceiver_power_enable = 1;         // ÉÏµçÊ±ÎŞÏßÄ£¿éµçÔ´¹Ø±Õ
 169   1         
 170   1         while(1)
 171   1            {
 172   2            if(idle_EN == 1)
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 4   

 173   2               {
 174   3               idle_EN = 0;
 175   3               EKB = 1;
 176   3               PCON |= 0x02;        
 177   3               }
 178   2               
 179   2            // Ö÷»ú±»µÁ±¨¾¯
 180   2            if(stolen_alarm_flag == 1)    
 181   2               {
 182   3               // ÓïÒôÌáÊ¾£¬Âí´ïÕñ¶¯
 183   3               Alarm_stolen_speech();     
 184   3               Moto_Vibration();          
 185   3               stolen_alarm_flag = 0;
 186   3               }  
 187   2      
 188   2            // Ì§ÆğĞÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌĞø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´ÎÌ§ÆğÖ»·¢4±é¡£
 189   2            if(raised_alarm_flag == 1) 
 190   2               {
 191   3               Alarm_raised_speech();     
 192   3               Moto_Vibration();         
 193   3               raised_alarm_flag = 0;
 194   3               }
 195   2      
 196   2            // µ¹µØĞÅºÅ±¨¾¯£¬Ã¿´Î±¨ÍêºóÇå0£¬Èç¹ûÔÙ´Î½Óµ½Ôò¼ÌĞø±¨¡£Ò»°ãÀ´Ëµ£¬Ö÷»úÃ¿´Îµ¹µØÖ»·¢4±é¡£
 197   2            if(fell_alarm_flag == 1)
 198   2               {
 199   3               Alarm_fell_speech();      
 200   3               Moto_Vibration();         
 201   3               fell_alarm_flag=0;
 202   3               }
 203   2      
 204   2            if(wire_broken_EN == 1)
 205   2               {
 206   3               wire_broken_speech();
 207   3               Moto_Vibration();         
 208   3               wire_broken_EN = 0;
 209   3               }
 210   2            
 211   2            if(battery_stolen_EN == 1)
 212   2               {
 213   3               Host_battery_high_alarm_speech();
 214   3               battery_stolen_EN = 0;
 215   3               Moto_Vibration();                
 216   3               }
 217   2            
 218   2            sEOS_Go_To_Sleep();        
 219   2            }
 220   1         }
 221          
 222          /*--------------------------------------------------------------------
 223             timerT0()
 224             ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ĞĞµÄ²Ù×÷
 225          --------------------------------------------------------------------*/
 226          
 227          void timer0() interrupt interrupt_timer_0_overflow
 228             {
 229   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
 230   1         TH0 = timer0_8H;
 231   1         TL0 = timer0_8L;
 232   1      
 233   1         // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 234   1         if(++timer0_count >= 2000)    
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 5   

 235   1            {
 236   2            
 237   2            // Ã¿¸ö3s×öÒ»´ÎµçÁ¿¼ì²â£¬²¢½øĞĞÏà¹ØµÄµçÁ¿ÌáÊ¾
 238   2            Check_motor_accumulator();
 239   2            
 240   2            if(ADC_check_result <= 0x368)                 // 3.11V/3.64V µçÁ¿²»×ã
 241   2               {
 242   3               battery_LV_flag = 1;
 243   3               battery_HV_flag = 0;
 244   3               battery_HV_speech_over = 0;
 245   3               }
 246   2            else if(ADC_check_result >= 0x37a)            // 3.52V/4.03V µçÁ¿³ä×ã
 247   2               {
 248   3               battery_HV_flag = 1;
 249   3               battery_LV_flag = 0;
 250   3               }
 251   2            else
 252   2               {
 253   3               battery_LV_flag = 0;
 254   3               battery_HV_flag = 0;
 255   3               }
 256   2                  
 257   2            if(battery_LV_flag == 1)
 258   2               {
 259   3               if(++battery_LV_flag_count > 20)
 260   3                  {
 261   4                  Battery_low_alarm_speech();
 262   4                  battery_LV_flag_count = 0;
 263   4                  }        
 264   3               }
 265   2            
 266   2            if(match_button_flag6 == 1)
 267   2               {
 268   3               #ifdef ID
                       if(++match_button_flag6count > 10)
                       #endif
 271   3               #ifdef WX
 272   3               if(++match_button_flag6count > 1)
 273   3               #endif
 274   3                  {
 275   4                  match_button_HVcount = 0;
 276   4                  match_button_LVcount = 0;
 277   4                  match_button_flag1 = 0;
 278   4                  match_button_flag2 = 0;
 279   4                  match_button_flag3 = 0;
 280   4                  match_button_flag4 = 0;
 281   4                  match_button_flag5 = 0;
 282   4                  match_button_flag6 = 0;
 283   4                  match_moto_EN = 0;
 284   4                  match_button_flag6count = 0;           
 285   4                  }        
 286   3               }     
 287   2            
 288   2            #ifdef WX
 289   2            if((toggle_button == 1)&&(idle_EN == 0))
 290   2               {
 291   3               if(++Toggle_button_HV_count > 450)
 292   3                  {
 293   4                  transceiver_power_enable = 1;
 294   4                  TXD = 0;
 295   4                  MagentControl_2 = 1;
 296   4                  idle_EN = 1;            
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 6   

 297   4                  }
 298   3               }
 299   2            #endif
 300   2            timer0_count = 0;
 301   2            }
 302   1         
 303   1         if(toggle_button == 0)
 304   1            {
 305   2            Toggle_button_HV_flag = 0;
 306   2            Toggle_button_HV_count = 0;
 307   2            MagentControl_2 = 0;
 308   2            }
 309   1      
 310   1         #ifdef ID
                 if((toggle_button == 1)&&(idle_EN == 0))
                    {
                    transceiver_power_enable = 1;
              //    receiver_EN = 0;
              //    transmiter_EN = 0;
              //    RXD = 0;
                    TXD = 0;
                    idle_EN = 1;
                    }
                 #endif
 321   1            
 322   1         if((transceiver_power_enable == 0)&&(match_button_flag6 == 0))
 323   1            {
 324   2            if(++receiver_EN_count > 300)
 325   2               {
 326   3               UART_Send_Data_F(ComMode_1);
 327   3               TXD = 0;
 328   3               
 329   3               transceiver_power_enable = 1;
 330   3               receiver_EN = 0;
 331   3               receiver_EN_count = 0;
 332   3               }
 333   2            }  
 334   1      
 335   1         if((transceiver_power_enable == 1)&&(match_button_flag6 == 0))
 336   1            {     
 337   2            if(++receiver_DisEN_count > 1500)
 338   2               {
 339   3               transceiver_power_enable = 0;
 340   3               
 341   3               receiver_DisEN_count = 0;
 342   3      
 343   3               #ifdef F3
                       receiver_EN = 0;
                       RXD = 1;
                       #endif
 347   3               }
 348   2            }
 349   1         
 350   1         if(press_open_button == 0)
 351   1            {
 352   2            if(++Press_open_button_count > 3000)
 353   2               {
 354   3               transceiver_power_enable = 0;
 355   3               UART_Send_Data_F(ComMode_11);
 356   3               TXD = 0;    
 357   3               transceiver_power_enable = 1;    
 358   3               }
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 7   

 359   2            }
 360   1         else
 361   1            {
 362   2            Press_open_button_count = 0;
 363   2            }
 364   1         
 365   1         if(match_button == 0)
 366   1            {
 367   2            match_button_HVcount = 0;
 368   2                     
 369   2            if(++match_button_LVcount > 4000)
 370   2               {
 371   3               match_button_LVcount = 4002;
 372   3               match_button_flag1 = 0;
 373   3               match_button_flag2 = 0;
 374   3               match_button_flag3 = 0;
 375   3               match_button_flag4 = 0;
 376   3               match_button_flag5 = 0;
 377   3               }
 378   2            else
 379   2               {
 380   3               match_button_flag1 = 1;
 381   3               if(match_button_flag2 == 1)
 382   3                  match_button_flag3 = 1;
 383   3               if(match_button_flag4 == 1)
 384   3                  match_button_flag5 = 1;
 385   3               }
 386   2            
 387   2            battery_LV_flag = 0;
 388   2            battery_HV_flag = 0;
 389   2            }
 390   1         else
 391   1            {
 392   2            match_button_LVcount = 0;
 393   2            
 394   2            if(match_button_flag1 == 1)
 395   2               match_button_flag2 = 1;       
 396   2            if(match_button_flag3 == 1)
 397   2               match_button_flag4 = 1; 
 398   2            if(match_button_flag5 == 1)
 399   2               {
 400   3               match_button_flag6 = 1;
 401   3               match_button_flag5 = 0;
 402   3               
 403   3               transceiver_power_enable = 0;
 404   3               
 405   3               #ifdef ID
                       receiver_EN_count = 0;
                       receiver_EN = 0;
                       RXD = 1;
                       #endif
 410   3               #ifdef WX
 411   3               UART_Send_Data_match();
 412   3               #endif
 413   3      
 414   3               if(match_moto_EN == 0)
 415   3                  {
 416   4                  Moto_Vibration(); 
 417   4                  match_moto_EN = 1;
 418   4                  }
 419   3               }
 420   2               
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 8   

 421   2            if(++match_button_HVcount > 4000)
 422   2               {
 423   3               match_button_HVcount = 4002;
 424   3               match_button_flag1 = 0;
 425   3               match_button_flag2 = 0;
 426   3               match_button_flag3 = 0;
 427   3               match_button_flag4 = 0;
 428   3               match_button_flag5 = 0;
 429   3               match_moto_EN = 0;
 430   3               }
 431   2            }
 432   1      
 433   1         #ifdef ID
                 if(IDflash_EN == 1)
                    {
                    IDflash_EN = 0;
                    match_button_flag1 = 0;
                    match_button_flag2 = 0;
                    match_button_flag3 = 0;
                    match_button_flag4 = 0;
                    match_button_flag5 = 0;
                    match_button_flag6 = 0;
                    match_moto_EN = 0;
                    Self_learn_programming_F();
                    Moto_Vibration();
                    Delay(10);
                    Moto_Vibration();
                    match_button_flag6count = 0;
                    }
                 #endif
 451   1         }
 452          
 453          /*-----------------------------------------------
 454             UART interrupt
 455          -----------------------------------------------*/
 456          void uart_isr() interrupt 4 
 457             {
 458   1         if(RI)
 459   1            {
 460   2            RI=0;
 461   2            received_data_buffer[data_count] = SBUF;
 462   2            
 463   2            if(match_button_flag6 == 0)
 464   2               {
 465   3               // judge whether buffer[0] is CmdHead
 466   3               if((data_count == 0) && (received_data_buffer[0] == IDkey6))
 467   3                  {
 468   4                  data_count = 1;
 469   4                  }
 470   3               else if((data_count == 1) && (received_data_buffer[1] == IDkey7))
 471   3                  {
 472   4                  data_count = 2;
 473   4                  }
 474   3               else if((data_count == 2) && (received_data_buffer[2] == IDkey8))
 475   3                  {
 476   4                  data_count = 3;
 477   4                  }
 478   3               else if((data_count == 3) && (received_data_buffer[3] == IDkey9))
 479   3                  {
 480   4                  data_count = 4;
 481   4                  }
 482   3               else if((data_count == 4) && (received_data_buffer[4] == IDkey10))
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 9   

 483   3                  {
 484   4                  data_count = 5;
 485   4                  }
 486   3               else if(data_count == 5)
 487   3                  {
 488   4                  receive_data_finished_flag = 1;
 489   4                  data_count = 0;
 490   4                  }
 491   3               else 
 492   3                  {
 493   4                  data_count = 0;
 494   4                  }
 495   3      
 496   3               if(receive_data_finished_flag==1)   
 497   3                  {
 498   4                  receive_data_finished_flag=0;       
 499   4                  switch(received_data_buffer[5])
 500   4                     {
 501   5                     case ComMode_2:
 502   5                        {
 503   6                        battery_stolen_EN = 1;
 504   6                        }
 505   5                     break;
 506   5                     
 507   5                     case ComMode_3:
 508   5                        {
 509   6                        stolen_alarm_flag = 1;
 510   6      
 511   6                        raised_alarm_count=0;
 512   6                        raised_alarm_flag=0;
 513   6                        fell_alarm_count=0;
 514   6                        fell_alarm_flag=0;
 515   6                        }
 516   5                     break;
 517   5                  
 518   5                     case ComMode_4:
 519   5                        {
 520   6                        raised_alarm_flag=1;
 521   6      
 522   6                        stolen_alarm_count=0;
 523   6                        stolen_alarm_flag=0;
 524   6                        fell_alarm_count=0;
 525   6                        fell_alarm_flag=0;
 526   6                        }
 527   5                     break;
 528   5      
 529   5                     case ComMode_5:
 530   5                        {
 531   6                        fell_alarm_flag=1;   
 532   6      
 533   6                        stolen_alarm_count=0;
 534   6                        stolen_alarm_flag=0;
 535   6                        raised_alarm_count=0;
 536   6                        raised_alarm_flag=0;
 537   6                        }
 538   5                     break;
 539   5      
 540   5                     case ComMode_6:
 541   5                        {
 542   6                        wire_broken_EN = 1;
 543   6                        }
 544   5                     break;
C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 10  

 545   5                     }
 546   4                  }
 547   3               }
 548   2            else
 549   2               {
 550   3               if((data_count == 0)&&(received_data_buffer[0] == CmdHead))
 551   3                  {
 552   4                  data_count = 1;
 553   4                  }
 554   3               else if((data_count == 1)&&(received_data_buffer[1] == ComMode_1))
 555   3                  {
 556   4                  data_count = 2;
 557   4                  }
 558   3               else if(data_count == 2)
 559   3                  {
 560   4                  data_count = 3;
 561   4                  }
 562   3               else if(data_count == 3)
 563   3                  {
 564   4                  data_count = 4;
 565   4                  }
 566   3               else if(data_count == 4)
 567   3                  {
 568   4                  data_count = 5;
 569   4                  }
 570   3               else if(data_count == 5)
 571   3                  {
 572   4                  data_count = 6;
 573   4                  }
 574   3               else if(data_count == 6)
 575   3                  {
 576   4                  data_count = 0;
 577   4                  IDflash_EN = 1;
 578   4                  }
 579   3               else 
 580   3                  {
 581   4                  data_count = 0;
 582   4                  }
 583   3               }     
 584   2            }
 585   1         }
 586          
 587          /*-----------------------------------------------------------
 588             KBI_ISR()
 589             ¼üÅÌÖĞ¶Ï£¬Ê¹Ğ¾Æ¬´ÓÊ¡µçÄ£Ê½ÖĞ»½ĞÑ
 590          -----------------------------------------------------------*/
 591          void KBI_ISR(void) interrupt 7
 592             {
 593   1         EKB = 0;
 594   1         KBIF &= 0xfc;
 595   1         transceiver_power_enable = 0;
 596   1         receiver_EN = 0;
 597   1         RXD = 1;
 598   1         Toggle_button_HV_count = 0;
 599   1      // EKB = 1;
 600   1         }
 601                
 602          /*---------------------------------------------------
 603             end of file
 604          ----------------------------------------------------*/


C51 COMPILER V9.54   MAIN                                                                  06/15/2015 15:06:03 PAGE 11  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1047    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     70    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     38    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
