C51 COMPILER V9.54   DELAY                                                                 05/22/2015 14:12:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DELAY
OBJECT MODULE PLACED IN .\Delay.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Library\Delay.c COMPACT ROM(COMPACT) OPTIMIZE(8,S
                    -PEED) BROWSE INCDIR(..\Library) DEBUG OBJECTEXTEND PRINT(.\Delay.lst) TABS(3) OBJECT(.\Delay.obj)

line level    source

   1          /*---------------------------------------------------
   2             Delay.c (v1.00)
   3             
   4             Delay functions
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Delay.h"
  11          
  12          tWord Timeout_loop = 0;
  13          
  14          /*------------------------------------------------------------------*/
  15          void Delay_1ms(void)
  16             {
  17   1         Timeout_loop = LOOP_TIMEOUT_INIT_001ms;
  18   1      
  19   1         // Simple loop timeout...
  20   1         while (++Timeout_loop != 0);
  21   1         }
  22          /*------------------------------------------------------------------*/
  23          void Delay_5ms(void)
  24             {
  25   1         Timeout_loop = LOOP_TIMEOUT_INIT_005ms;
  26   1      
  27   1         // Simple loop timeout...
  28   1         while (++Timeout_loop != 0);
  29   1         }
  30          /*------------------------------------------------------------------*/
  31          void Delay_10ms(void)
  32             {
  33   1         Timeout_loop = LOOP_TIMEOUT_INIT_010ms;
  34   1      
  35   1         // Simple loop timeout...
  36   1         while (++Timeout_loop != 0);
  37   1         }
  38          
  39          /*------------------------------------------------------------------*/
  40          void Delay_50ms(void)
  41             {
  42   1         Timeout_loop = LOOP_TIMEOUT_INIT_050ms;
  43   1      
  44   1         // Simple loop timeout...
  45   1         while (++Timeout_loop != 0);
  46   1         }
  47          
  48          /*------------------------------------------------------------------*/
  49          void Delay_500ms(void)
  50             {
  51   1         Timeout_loop = LOOP_TIMEOUT_INIT_500ms;
  52   1      
  53   1         // Simple loop timeout...
  54   1         while (++Timeout_loop != 0);
C51 COMPILER V9.54   DELAY                                                                 05/22/2015 14:12:26 PAGE 2   

  55   1         }
  56          
  57          /*---------------------------------------------------
  58             Delay()
  59             延迟程序
  60          --------------------------------------------------*/
  61          
  62          void Delay(tByte n)
  63             {
  64   1         tWord x;
  65   1         while(n--)
  66   1            {
  67   2            x=5000;
  68   2            while(x--);
  69   2            }
  70   1         }
  71          
  72          /*---------------------------------------------------
  73             Custom_Delay()
  74             延迟程序
  75          --------------------------------------------------*/
  76          void Custom_Delay(tByte t, m)
  77             {
  78   1         tWord i;
  79   1         tByte j;
  80   1         for(i = 0; i < t; i++)     
  81   1         for(j = 0; j < m; j++);
  82   1         }
  83             
  84          /*--------------------------------------------------
  85             delay_ms()
  86             
  87             延迟约为1ms的子程序
  88          ----------------------------------------------------*/
  89          void delay_ms(tWord count)
  90             {
  91   1         tWord i, j;
  92   1         for(i=0;i<count;i++)
  93   1            {  
  94   2            for(j=0;j<100;j++);
  95   2            }
  96   1         }
  97          
  98          /*--------------------------------------------------
  99             delay_us()
 100             
 101             延迟约为1us的子程序
 102          ----------------------------------------------------*/
 103          
 104          void delay_us(tWord count1)
 105             {
 106   1         tWord i;
 107   1         tByte j;
 108   1         for(i=0;i<count1;i++)
 109   1            {
 110   2            for(j=0;j<4;j++);
 111   2            }
 112   1         }
 113          
 114          /*----------------------------------------------------
 115             Magnet_Delay()
 116             电磁铁的延迟程序，要在里面加入对过流的判断
C51 COMPILER V9.54   DELAY                                                                 05/22/2015 14:12:26 PAGE 3   

 117          -----------------------------------------------------*/
 118          void Magnet_Delay(tWord x, y)
 119             {
 120   1         tByte i;
 121   1         tWord j;                                                                                                 
             -       
 122   1         for(i = 0; i < 50; i++)
 123   1            {
 124   2            for(j = 0; j< x; j++);
 125   2            }
 126   1         for(i = 0; i < 50; i++)
 127   1            {
 128   2            // 检测过流保护是否跳转，如果为1，则表明电流过大
 129   2            if(magnet_overcurrent == 0)
 130   2               {
 131   3               for(j = 0; j< y; j++);
 132   3               }
 133   2            else
 134   2               {
 135   3               return;
 136   3               }
 137   2            }
 138   1         }
 139          
 140          
 141          /*---------------------------------------------------
 142             end of file
 143          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2       6
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
