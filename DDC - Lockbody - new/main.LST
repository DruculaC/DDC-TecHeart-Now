C51 COMPILER V9.54   MAIN                                                                  11/14/2016 09:30:58 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE main.c COMPACT ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(..\Library) DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             main.c (v1.00)
   3             
   4             DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          
  18          /*------- Public variable declarations --------------------------*/
  19          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  20          extern bit enable_sensor_delayEN;
  21          
  22          // ------ Private variable definitions -----------------------------
  23          bit stolen_alarm_flag = 0;             // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  24          bit position_sensor_EN=0;        //Î»ÖÃ´«¸ÐÆ÷£¬¼´µ¹µØÌ§Æð´«¸ÐÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ÐÆ÷
  25          bit host_stolen_alarm1_EN = 0;      //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  26          bit host_stolen_alarm2_EN = 0;      //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶þ¶ÎÓïÒôÊ¹ÄÜ
  27          tByte host_stolen_alarm1_count = 0;    //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊý
  28          tByte host_stolen_alarm2_count = 0;    //ÅÐ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶þ¶ÎÓïÒô´ÎÊý
  29          bit fell_flag=0;                 //ÅÐ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  30          bit raised_flag=0;               //ÅÐ¶ÏÖ÷»ú±»Ì§Æðºó£¬ÖÃ1
  31          tByte sensor_2ndstage_count = 0;    //´«¸ÐÆ÷½øÈëµÚ¶þ½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  32          tWord sensor_3rdstage_time = 0;        //´«¸ÐÆ÷½øÈëµÚÈý½×¶ÎµÄÊ±¼ä£¬
  33          tByte sensor_3rdstage_effcount = 0;    //´«¸ÐÆ÷½øÈëµÚÈý½×¶Îºó£¬ÓÐÐ§´¥Åö´ÎÊýµÄ¼ÆÊý
  34          tByte sensor_3rdstage_count = 0;       //´«¸ÐÆ÷½øÈëµÚÈý½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊý
  35          tWord sensor_3rdstage_interval = 0;    //´«¸ÐÆ÷ÔÚµÚÈý½×¶ÎÖÐ£¬Ã¿´ÎÓÐÐ§µÍµçÆ½¼ÆÊýÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓÐÐ§¡£
  36          bit raised_fell_flag = 0;              //µ¹µØ»òÕßÌ§Æð´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  37          tByte sensor_trigger_count=0;    //´«¸ÐÆ÷´¥·¢¼ÆÊý
  38          tWord sensor_2ndstage_time=0;    //´«¸ÐÆ÷½øÈëµÚ¶þ½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊý
  39          tByte sensor_1ststage_count=0;   //´«¸ÐÆ÷µÚÒ»½×¶ÎÅÐ¶ÏµÍµçÆ½µÄ¼ÆÊý
  40          tByte nearby_away_interval = 0;     //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  41          
  42          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æðºó£¬Ïò¸½»ú·¢³ö±¨¾¯ÐÅºÅµÄ´ÎÊý
  43          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ÐÅºÅµÄ´ÎÊý
  44          tWord timer0_count=0;      // counter for timer0, increment every ticket         
  45          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};     //½ÓÊÕÊý¾Ý»º´æ
  46          bit receive_data_finished_flag = 0;    //½ÓÊÕÕâÒ»´®Êý¾ÝÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  47          tByte data_count = 0;            //½ÓÊÕÊý¾Ý»º´æµÄÎ»Êý£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊý¾Ý
  48          tByte one_receive_byte = 0;      //½ÓÊÕÊý¾ÝµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  49          tByte one_receive_byte_count = 0;         //one_receive_byteÓÐ8Î»£¬´Ë¼ÆÊý±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊýµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  50          bit receive_wire_flag = 1;    //½ÓÊÕÍ¨ÐÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅÐ¶ÏP1.1Ò»´Î
             -¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕýÈ·µÄÏÂ½µÑØ
C51 COMPILER V9.54   MAIN                                                                  11/14/2016 09:30:58 PAGE 2   

  51          tByte receive_HV_count = 0;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓÐÐÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊý£¬Ò»µ©³¬¹ýÄ³¸öÖµ£¬Ôò½«one_receive
             -_byte_countÇå0
  52          tByte receive_LV_count = 0;      //Ã¿´Îtimer1Òç³öÊ±ÅÐ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊý¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  53          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  54          tByte raise_wire_time=0;         //Ì§Æð¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  55          tWord raised_fell_number = 0;          //µ¹µØ»òÕßÌ§Æð³ö·¢ºó£¬¼ÆÊý£¬µ½´ïÒ»¶¨ÊýÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆðÇåÁã¡£
  56          bit raised_fell_once_flag = 0;         //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ý£¬Èç¹û±êÖ¾¹ýÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆðÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  57          tByte key_rotated_on_flag=0;        //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  58          tWord ADC_check_result = 0;      //×÷ÎªAD¼ì²âÖµ
  59          tByte wire_broken_count = 0;     // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  60          bit battery_stolen_EN = 0;       // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  61          tByte battery_stolen_count = 0;  // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊý
  62          bit horizontal_vibration = 0;    // ±íÊ¾´¹Ö±´«¸ÐÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ÐÐ¹ØÔ¿³×µÄ²Ù×÷¡
  63          tWord horizontal_vibration_count = 0;  //´¹Ö±´«¸ÐÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øÐÐ¼ÆÊý¡£
  64          bit vibration_flag = 0;
  65          tWord vibration_count = 0;
  66          bit wire_broken_flag = 0;        // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  67          bit IDkey_flag = 0;        // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ýºóÖÃ1£¬
  68          tByte IDkey_count = 0;     // ID¿¨ÈÏÖ¤Í¨¹ýºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  69          tByte enable_sensor_delay_count = 0;      // ´«¸ÐÆ÷ÑÓ³ÙµÄÊ±¼ä
  70          bit sensor_3rdalarm_flag = 0;
  71          bit wheeled_flag = 0;
  72          tWord wheeled_count = 0;
  73          
  74          tByte lock_time = 0;
  75          
  76          /*-----------------------------------------------------------*/
  77          void main(void)
  78             {
  79   1         InitTimer(50, 100);
  80   1      
  81   1         SC_RST = 1;
  82   1      
  83   1         transmit_wire = 0;
  84   1         
  85   1         while(1)
  86   1            {
  87   2            sEOS_Go_To_Sleep();
  88   2            }
  89   1         }
  90          
  91          /*------------------------------------------------------------------
  92             timerT0()
  93             ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ÐÐµÄ²Ù×÷
  94          --------------------------------------------------------------------*/
  95          
  96          void timer0() interrupt interrupt_timer_0_overflow
  97             {
  98   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
  99   1         TH0 = timer0_8H;
 100   1         TL0 = timer0_8L;
 101   1      
 102   1         // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 103   1         if(++timer0_count >= 10)      
 104   1            {
 105   2            // ½«¼ÆÊýÇå0
 106   2            timer0_count = 0;
 107   2            transmiter_EN = ~transmiter_EN;
 108   2            }     
 109   1         }
 110          
C51 COMPILER V9.54   MAIN                                                                  11/14/2016 09:30:58 PAGE 3   

 111          
 112          /*------------------------------------------------------------------
 113             timerT1()
 114             ¶¨Ê±Æ÷1Ã¿´ÎÒç³öºóÖ´ÐÐµÄ²Ù×÷
 115          --------------------------------------------------------------------*/
 116             
 117          void timerT1() interrupt interrupt_timer_1_overflow         
 118             {
 119   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷1µÄÉèÖÃ
 120   1         TH1 = timer1_8H;           
 121   1         TL1 = timer1_8L;
 122   1      
 123   1         // ÅÐ¶Ï½ÓÊÕÏßÊÇ·ñÎª0£¬Èç¹ûÊÇ0£¬Ôò±íÊ¾¿ÉÄÜÓÐÐÅºÅ¹ýÀ´¡£
 124   1         if(receive_wire2 == 0)              
 125   1            {
 126   2            // Èç¹û½ÓÊÕÏßÊÇ0£¬Ôò½«´Ë±êÖ¾Î»ÖÃ0£¬±íÊ¾´ËÏßÎª0¹ý¡£
 127   2            receive_wire_flag=0;
 128   2            
 129   2            // ½ÓÊÕµ½µÍµçÆ½µÄÊ±¼ä¼ÆÊý£¬´óÓÚ8ms¾ÍÖØÐÂ¼ÆÊý
 130   2            if(++receive_LV_count==150)      
 131   2               {
 132   3               receive_LV_count=0;
 133   3               }
 134   2            }
 135   1         else
 136   1            {
 137   2            if(receive_wire_flag==0)//ËµÃ÷ÓÐÒ»¸öµÍµçÆ½
 138   2               {
 139   3               receive_wire_flag=1;
 140   3      //       one_receive_byte<<=1;
 141   3      
 142   3               if((receive_LV_count>20)&&(receive_LV_count<=80))//µÍµçÆ½³ÖÐøµÄÊ±¼äÐ¡ÓÚ3ms£¬ÔòÎª0
 143   3                  {
 144   4                  one_receive_byte<<=1;
 145   4                  one_receive_byte &= 0xfe;
 146   4                  one_receive_byte_count++;
 147   4                  receive_HV_count=0;
 148   4                  }
 149   3               if(receive_LV_count > 80)//µÍµçÆ½³ÖÐøµÄÊ±¼ä´óÓÚ4.5ms£¬ÔòÎª1
 150   3                  {
 151   4                  one_receive_byte<<=1;
 152   4                  one_receive_byte |= 0x01;
 153   4                  one_receive_byte_count++;
 154   4                  receive_HV_count=0;
 155   4                  }
 156   3               else
 157   3                  {
 158   4                  receive_HV_count++;  
 159   4                  }
 160   3      
 161   3               receive_LV_count=0;
 162   3               }
 163   2            else
 164   2               {
 165   3               receive_HV_count++;
 166   3               if(receive_HV_count >= 100)
 167   3                  {
 168   4                  one_receive_byte_count=0;
 169   4                  receive_wire_flag=1;
 170   4                  data_count=0;
 171   4                  }     
 172   3               }
C51 COMPILER V9.54   MAIN                                                                  11/14/2016 09:30:58 PAGE 4   

 173   2            }
 174   1      
 175   1         if(one_receive_byte_count == 8)//ËµÃ÷Ò»¸ö×Ö½ÚµÄÊý¾ÝÒÑ¾­½ÓÊÜÍêÈ«
 176   1            {
 177   2            one_receive_byte_count=0;
 178   2            received_data_buffer[data_count]=one_receive_byte;
 179   2            if(data_count==0&&received_data_buffer[0] == CmdHead)
 180   2               {
 181   3               data_count=1;
 182   3               }
 183   2            else if(data_count==1&&received_data_buffer[1] == MyAddress)
 184   2               {
 185   3               data_count=2;
 186   3               }
 187   2            else if(data_count==2)
 188   2               {
 189   3               receive_data_finished_flag = 1;
 190   3               data_count=0;
 191   3               }
 192   2            else 
 193   2               {
 194   3               data_count=0;
 195   3               }
 196   2            }
 197   1      
 198   1         if(receive_data_finished_flag==1)   //ËµÃ÷½ÓÊÕµ½ÁËÊý¾Ý£¬¿ªÊ¼´¦Àí
 199   1            {
 200   2            receive_data_finished_flag=0; //Çå½ÓÊÕ±êÖ¾
 201   2            switch(received_data_buffer[2])//½âÎöÖ¸Áî
 202   2               {
 203   3               case ComMode_1://½ÓÊÕµ½µÄÊÇÖ÷»ú·¢ËÍ¹ýÀ´µÄ±àÂë1µÄÐÅºÅ£¬ËµÃ÷Ö÷»úÔÚ3MÄÚ£¬ÊÇÕý³£µÄ
 204   3                  {  
 205   4                  MagentControl_1 = 1;
 206   4                  MagentControl_2 = 0;
 207   4                  }
 208   3               break;
 209   3               case ComMode_2:
 210   3                  {
 211   4                  MagentControl_1 = 0;
 212   4                  MagentControl_2 = 1;          
 213   4                  }
 214   3               break;
 215   3               case ComMode_3:
 216   3                  {
 217   4                  MagentControl_1 = 1;
 218   4                  MagentControl_2 = 1;          
 219   4                  }
 220   3               break;
 221   3               }
 222   2            }
 223   1         }
 224          
 225          /*---------------------------------------------------
 226             end of file
 227          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    330    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     48    ----
C51 COMPILER V9.54   MAIN                                                                  11/14/2016 09:30:58 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     17    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
