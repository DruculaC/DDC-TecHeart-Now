C51 COMPILER V9.54   MAIN                                                                  11/15/2016 11:49:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE main.c COMPACT ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(..\Library) DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             main.c (v1.00)
   3             
   4             DDC-F program, for electrocar.
   5          ----------------------------------------------------*/
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "AD.h"
  11          #include "Timer.h"
  12          #include "voice.h"
  13          #include "pwm.h"
  14          #include "Delay.h"
  15          #include "communication.h"
  16          #include "Other.h"
  17          
  18          /*------- Public variable declarations --------------------------*/
  19          extern tByte timer0_8H, timer0_8L, timer1_8H, timer1_8L;
  20          extern bit enable_sensor_delayEN;
  21          
  22          // ------ Private variable definitions -----------------------------
  23          bit stolen_alarm_flag = 0;             // when host been touch 3 times, this flag 1 before alarm voice present, no
             -t to detect sensor for 1st voice alarm.
  24          bit position_sensor_EN=0;        //Î»ÖÃ´«¸ĞÆ÷£¬¼´µ¹µØÌ§Æğ´«¸ĞÆ÷×Ü¿ª¹Ø£¬1µÄÊ±ºò£¬¼ì²âÕâÁ½¸ö´«¸ĞÆ÷
  25          bit host_stolen_alarm1_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒôÊ¹ÄÜ
  26          bit host_stolen_alarm2_EN = 0;      //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒôÊ¹ÄÜ
  27          tByte host_stolen_alarm1_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚÒ»¶ÎÓïÒô´ÎÊı
  28          tByte host_stolen_alarm2_count = 0;    //ÅĞ¶ÏÎª±»µÁ±¨¾¯ºóµÄµÚ¶ş¶ÎÓïÒô´ÎÊı
  29          bit fell_flag=0;                 //ÅĞ¶ÏÖ÷»úµ¹ÏÂºó£¬ÖÃ1
  30          bit raised_flag=0;               //ÅĞ¶ÏÖ÷»ú±»Ì§Æğºó£¬ÖÃ1
  31          tByte sensor_2ndstage_count = 0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶Î¼ì²âÊ±£¬¼ÆËãµÍµçÆ½µÄÊ±¼ä
  32          tWord sensor_3rdstage_time = 0;        //´«¸ĞÆ÷½øÈëµÚÈı½×¶ÎµÄÊ±¼ä£¬
  33          tByte sensor_3rdstage_effcount = 0;    //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬ÓĞĞ§´¥Åö´ÎÊıµÄ¼ÆÊı
  34          tByte sensor_3rdstage_count = 0;       //´«¸ĞÆ÷½øÈëµÚÈı½×¶Îºó£¬µÍµçÆ½µÄ¼ÆÊı
  35          tWord sensor_3rdstage_interval = 0;    //´«¸ĞÆ÷ÔÚµÚÈı½×¶ÎÖĞ£¬Ã¿´ÎÓĞĞ§µÍµçÆ½¼ÆÊıÖ®¼äµÄÊ±¼ä¼ä¸ô¡£ÔÚÕâÆÚ¼äµÄµÍµ
             -çÆ½²»ÈÏÎªÓĞĞ§¡£
  36          bit raised_fell_flag = 0;              //µ¹µØ»òÕßÌ§Æğ´¥·¢ºó£¬´Ë±êÖ¾Î»ÖÃ1
  37          tByte sensor_trigger_count=0;    //´«¸ĞÆ÷´¥·¢¼ÆÊı
  38          tWord sensor_2ndstage_time=0;    //´«¸ĞÆ÷½øÈëµÚ¶ş½×¶ÎºóÁ÷ÊÅÊ±¼äµÄ¼ÆÊı
  39          tByte sensor_1ststage_count=0;   //´«¸ĞÆ÷µÚÒ»½×¶ÎÅĞ¶ÏµÍµçÆ½µÄ¼ÆÊı
  40          tByte nearby_away_interval = 0;     //¸½»úÀë¿ªºÍ¿¿½üÊ±£¬ÓïÒôÌáÊ¾ºÍ¿ª¹ØËøµÄÊ±¼ä¼ä¸ô
  41          
  42          tByte raised_alarm_count = 0;    //Ö÷»ú±»Ì§Æğºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  43          tByte fell_alarm_count=0;        //Ö÷»úµ¹µØºó£¬Ïò¸½»ú·¢³ö±¨¾¯ĞÅºÅµÄ´ÎÊı
  44          tWord timer0_count=0;      // counter for timer0, increment every ticket         
  45          tByte received_data_buffer[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};     //½ÓÊÕÊı¾İ»º´æ
  46          bit receive_data_finished_flag = 0;    //½ÓÊÕÕâÒ»´®Êı¾İÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  47          tByte data_count = 0;            //½ÓÊÕÊı¾İ»º´æµÄÎ»Êı£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊı¾İ
  48          tByte one_receive_byte = 0;      //½ÓÊÕÊı¾İµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  49          tByte one_receive_byte_count = 0;         //one_receive_byteÓĞ8Î»£¬´Ë¼ÆÊı±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊıµ½8µÄÊ±ºò±íÃ÷
             -Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  50          bit receive_wire_flag = 1;    //½ÓÊÕÍ¨ĞÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅĞ¶ÏP1.1Ò»´Î
             -¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕıÈ·µÄÏÂ½µÑØ
C51 COMPILER V9.54   MAIN                                                                  11/15/2016 11:49:20 PAGE 2   

  51          tByte receive_HV_count = 0;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓĞĞÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊı£¬Ò»µ©³¬¹ıÄ³¸öÖµ£¬Ôò½«one_receive
             -_byte_countÇå0
  52          tByte receive_LV_count = 0;      //Ã¿´Îtimer1Òç³öÊ±ÅĞ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊı¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  53          tByte fell_wire_time=0;          //µ¹µØ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  54          tByte raise_wire_time=0;         //Ì§Æğ¼ì²âÏß£¬¼ì²âµÍµçÆ½µÄÊ±¼ä
  55          tWord raised_fell_number = 0;          //µ¹µØ»òÕßÌ§Æğ³ö·¢ºó£¬¼ÆÊı£¬µ½´ïÒ»¶¨ÊıÖµºó£¬½«ÆäÓë±êÖ¾Î»Ò»ÆğÇåÁã¡£
  56          bit raised_fell_once_flag = 0;         //raised_fell_flagÊÇ·ñÔø¾­±êÖ¾¹ı£¬Èç¹û±êÖ¾¹ıÔòÖÃ1.È»ºóÖ÷»ú±»»Ö¸´µ¹µØ»òÕß»
             -Ö¸´Ì§ÆğÊ±£¬´Ë±êÖ¾Î»¸´Î»¡£
  57          tByte key_rotated_on_flag=0;        //µç¶¯³µ¿ªÆô¹Ø±Õ±êÖ¾Î»£¬1±íÊ¾µç¶¯³µ¿ªÆôÁË£¬0±íÊ¾µç¶¯³µ¹Ø±ÕÁË
  58          tWord ADC_check_result = 0;      //×÷ÎªAD¼ì²âÖµ
  59          tByte wire_broken_count = 0;     // ×÷Îª¶ÏÏßºóµÄÊ±¼ä¼ì²â
  60          bit battery_stolen_EN = 0;       // ×÷Îªµç³Ø±»µÁµÄÊ¹ÄÜ¶Ë
  61          tByte battery_stolen_count = 0;  // ×÷Îªµç³Ø±»µÁµÄ±¨¾¯´ÎÊı
  62          bit horizontal_vibration = 0;    // ±íÊ¾´¹Ö±´«¸ĞÆ÷ÔÚÕñ¶¯£¬´ËÊ±¾ÍËã¹ØÔ¿³×£¬Ò²²»ÄÜÖ´ĞĞ¹ØÔ¿³×µÄ²Ù×÷¡
  63          tWord horizontal_vibration_count = 0;  //´¹Ö±´«¸ĞÆ÷´¥·¢ºó£¬¶ÔÊ±¼ä½øĞĞ¼ÆÊı¡£
  64          bit vibration_flag = 0;
  65          tWord vibration_count = 0;
  66          bit wire_broken_flag = 0;        // ¼ô¶ÏËøÏßµÄ±êÖ¾Î»
  67          bit IDkey_flag = 0;        // µ±ID¿¨¿¿½üÊ±ÈÏÖ¤Í¨¹ıºóÖÃ1£¬
  68          tByte IDkey_count = 0;     // ID¿¨ÈÏÖ¤Í¨¹ıºó£¬¼ÆÊ±1·ÖÖÓ£¬Ê¹Ô¿³×ÄÜ×ª¶¯¡£
  69          tByte enable_sensor_delay_count = 0;      // ´«¸ĞÆ÷ÑÓ³ÙµÄÊ±¼ä
  70          bit sensor_3rdalarm_flag = 0;
  71          bit wheeled_flag = 0;
  72          tWord wheeled_count = 0;
  73          
  74          tByte lock_time = 0;
  75          
  76          bit openlock_flag = 0;
  77          bit closelock_flag = 0;
  78          
  79          /*-----------------------------------------------------------*/
  80          void main(void)
  81             {
  82   1         tByte i;
  83   1         
  84   1         InitTimer(50, 100);
  85   1      
  86   1         SC_RST = 1;
  87   1      
  88   1         
  89   1         while(1)
  90   1            {
  91   2            
  92   2            // sEOS_Go_To_Sleep();
  93   2            if(openlock_flag == 1)
  94   2               {
  95   3               MagentControl_1 = 1;
  96   3               MagentControl_2 = 0;
  97   3               
  98   3               for(i = 0; i < 6; i++)
  99   3                  Delay_500ms();
 100   3               
 101   3               MagentControl_1 = 1;
 102   3               MagentControl_2 = 1;
 103   3               openlock_flag = 0;         
 104   3               }
 105   2      
 106   2            if(closelock_flag == 1)
 107   2               {
 108   3               MagentControl_1 = 0;
 109   3               MagentControl_2 = 1;          
 110   3               
C51 COMPILER V9.54   MAIN                                                                  11/15/2016 11:49:20 PAGE 3   

 111   3               for(i = 0; i < 6; i++)
 112   3                  Delay_500ms();
 113   3               
 114   3               MagentControl_1 = 1;
 115   3               MagentControl_2 = 1;
 116   3               closelock_flag = 0;        
 117   3               }
 118   2            }
 119   1         }
 120          
 121          /*------------------------------------------------------------------
 122             timerT0()
 123             ¶¨Ê±Æ÷0Ã¿´ÎÒç³öºóÖ´ĞĞµÄ²Ù×÷
 124          --------------------------------------------------------------------*/
 125          
 126          void timer0() interrupt interrupt_timer_0_overflow
 127             {
 128   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷µÄÊ±¼äÉèÖÃ
 129   1         TH0 = timer0_8H;
 130   1         TL0 = timer0_8L;
 131   1      
 132   1         // ÉèÖÃÒ»¸öÃ¿3sµÄ²Ù×÷
 133   1         if(++timer0_count >= 10)      
 134   1            {
 135   2            // ½«¼ÆÊıÇå0
 136   2            timer0_count = 0;
 137   2            }     
 138   1         }
 139          
 140          
 141          /*------------------------------------------------------------------
 142             timerT1()
 143             ¶¨Ê±Æ÷1Ã¿´ÎÒç³öºóÖ´ĞĞµÄ²Ù×÷
 144          --------------------------------------------------------------------*/
 145             
 146          void timerT1() interrupt interrupt_timer_1_overflow         
 147             {
 148   1         // ÖØ×°ÔÚ¶¨Ê±Æ÷1µÄÉèÖÃ
 149   1         TH1 = timer1_8H;           
 150   1         TL1 = timer1_8L;
 151   1      
 152   1         // ÅĞ¶Ï½ÓÊÕÏßÊÇ·ñÎª0£¬Èç¹ûÊÇ0£¬Ôò±íÊ¾¿ÉÄÜÓĞĞÅºÅ¹ıÀ´¡£
 153   1         if(receive_wire2 == 0)              
 154   1            {
 155   2            // Èç¹û½ÓÊÕÏßÊÇ0£¬Ôò½«´Ë±êÖ¾Î»ÖÃ0£¬±íÊ¾´ËÏßÎª0¹ı¡£
 156   2            receive_wire_flag=0;
 157   2            
 158   2            // ½ÓÊÕµ½µÍµçÆ½µÄÊ±¼ä¼ÆÊı£¬´óÓÚ8ms¾ÍÖØĞÂ¼ÆÊı
 159   2            if(++receive_LV_count==150)      
 160   2               {
 161   3               receive_LV_count=0;
 162   3               }
 163   2            }
 164   1         else
 165   1            {
 166   2            if(receive_wire_flag==0)//ËµÃ÷ÓĞÒ»¸öµÍµçÆ½
 167   2               {
 168   3               receive_wire_flag=1;
 169   3      //       one_receive_byte<<=1;
 170   3      
 171   3               if((receive_LV_count>20)&&(receive_LV_count<=80))//µÍµçÆ½³ÖĞøµÄÊ±¼äĞ¡ÓÚ3ms£¬ÔòÎª0
 172   3                  {
C51 COMPILER V9.54   MAIN                                                                  11/15/2016 11:49:20 PAGE 4   

 173   4                  one_receive_byte<<=1;
 174   4                  one_receive_byte &= 0xfe;
 175   4                  one_receive_byte_count++;
 176   4                  receive_HV_count=0;
 177   4                  }
 178   3               if(receive_LV_count > 80)//µÍµçÆ½³ÖĞøµÄÊ±¼ä´óÓÚ4.5ms£¬ÔòÎª1
 179   3                  {
 180   4                  one_receive_byte<<=1;
 181   4                  one_receive_byte |= 0x01;
 182   4                  one_receive_byte_count++;
 183   4                  receive_HV_count=0;
 184   4                  }
 185   3               else
 186   3                  {
 187   4                  receive_HV_count++;  
 188   4                  }
 189   3      
 190   3               receive_LV_count=0;
 191   3               }
 192   2            else
 193   2               {
 194   3               receive_HV_count++;
 195   3               if(receive_HV_count >= 100)
 196   3                  {
 197   4                  one_receive_byte_count=0;
 198   4                  receive_wire_flag=1;
 199   4                  data_count=0;
 200   4                  }     
 201   3               }
 202   2            }
 203   1      
 204   1         if(one_receive_byte_count == 8)//ËµÃ÷Ò»¸ö×Ö½ÚµÄÊı¾İÒÑ¾­½ÓÊÜÍêÈ«
 205   1            {
 206   2            one_receive_byte_count=0;
 207   2            received_data_buffer[data_count]=one_receive_byte;
 208   2            if(data_count==0&&received_data_buffer[0] == CmdHead)
 209   2               {
 210   3               data_count=1;
 211   3               }
 212   2            else if(data_count==1&&received_data_buffer[1] == MyAddress)
 213   2               {
 214   3               data_count=2;
 215   3               }
 216   2            else if(data_count==2)
 217   2               {
 218   3               receive_data_finished_flag = 1;
 219   3               data_count=0;
 220   3               }
 221   2            else 
 222   2               {
 223   3               data_count=0;
 224   3               }
 225   2            }
 226   1      
 227   1         if(receive_data_finished_flag==1)   //ËµÃ÷½ÓÊÕµ½ÁËÊı¾İ£¬¿ªÊ¼´¦Àí
 228   1            {
 229   2            receive_data_finished_flag=0; //Çå½ÓÊÕ±êÖ¾
 230   2            switch(received_data_buffer[2])//½âÎöÖ¸Áî
 231   2               {
 232   3               case ComMode_1://½ÓÊÕµ½µÄÊÇÖ÷»ú·¢ËÍ¹ıÀ´µÄ±àÂë1µÄĞÅºÅ£¬ËµÃ÷Ö÷»úÔÚ3MÄÚ£¬ÊÇÕı³£µÄ
 233   3                  {  
 234   4                  openlock_flag = 1;
C51 COMPILER V9.54   MAIN                                                                  11/15/2016 11:49:20 PAGE 5   

 235   4                  }
 236   3               break;
 237   3               case ComMode_2:
 238   3                  {
 239   4                  closelock_flag = 1;
 240   4                  }
 241   3               break;
 242   3               case ComMode_3:
 243   3                  {
 244   4                  MagentControl_1 = 1;
 245   4                  MagentControl_2 = 1;          
 246   4                  }
 247   3               break;
 248   3               }
 249   2            }
 250   1         }
 251          
 252          /*---------------------------------------------------
 253             end of file
 254          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    381    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     48       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     19    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
